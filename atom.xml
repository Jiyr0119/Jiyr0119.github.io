<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jonathon&#39;s Blog</title>
  
  <subtitle>To be a better man</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.jonathon.cn/"/>
  <updated>2018-08-04T03:36:26.170Z</updated>
  <id>https://www.jonathon.cn/</id>
  
  <author>
    <name>Jonathon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序：带参数小程序相关知识</title>
    <link href="https://www.jonathon.cn/wechat-qrcode.html"/>
    <id>https://www.jonathon.cn/wechat-qrcode.html</id>
    <published>2018-08-04T03:18:34.000Z</published>
    <updated>2018-08-04T03:36:26.170Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-gold-cdn.xitu.io/2018/8/4/16502e26580f2d94?imageView2/1/w/1080/h/320/q/85/format/webp/interlace/1"></p><p>这个是带参数小程序码，我们项目里用到的就是，身份不同带不同参数，然后请求接口。代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">onLoad(options) &#123;<span class="comment">//用户授权操作</span></span><br><span class="line">options.db ? wx.setStorageSync(<span class="string">'dbid'</span>, options.db) : <span class="string">''</span>; <span class="comment">//分享功能逻辑</span></span><br><span class="line">wx.setStorageSync(<span class="string">'scene'</span>, options.scene)<span class="comment">// 这里就是从url获取的的参数，发送给后端大哥，然后让他去请求接口生成。</span></span><br><span class="line">utils.login(<span class="keyword">this</span>.handleLogin.bind(<span class="keyword">this</span>),<span class="keyword">this</span>.handleReset.bind(<span class="keyword">this</span>));</span><br><span class="line"><span class="keyword">let</span> card = wx.getStorageSync(<span class="string">'UserCard'</span>),</span><br><span class="line">show = wx.getStorageSync(<span class="string">'seller'</span>),</span><br><span class="line">db = wx.getStorageSync(<span class="string">'dbid'</span>),</span><br><span class="line">ifHave = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(card.distribution_id!=<span class="string">''</span>)&#123;</span><br><span class="line">        ifHave = <span class="literal">true</span>;  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;    </span><br><span class="line">        ifHave = <span class="literal">false</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;     </span><br><span class="line">        userId:card.user_id,     </span><br><span class="line">        dbShow:ifHave &#125;)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>其实很简单，主要当时调试的时候，有一个坑提醒一下。小程序码唤醒的是你线上发布过的小程序，也怪自己当时没有好好读文档吃的亏。哈哈 。所以我就总结了一下。<br><a id="more"></a></p><h2 id="获取小程序页面二维码"><a href="#获取小程序页面二维码" class="headerlink" title="获取小程序页面二维码"></a>获取小程序页面二维码</h2><p>通过后台接口可以获取小程序任意页面的二维码，扫描该二维码可以直接进入小程序对应的页面Bug &amp; Tiptip：通过该接口，仅能生成已发布的小程序的二维码。tip：可以在开发者工具预览时生成开发版的带参二维码。tip：生成二维码的总数不限，但接口调用每天上限 100000 次（官方文档写的1万，有误，是10万次）。<br><img src="https://user-gold-cdn.xitu.io/2018/8/4/16502e5b12cd4963?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><p>第三方生成地址：（假如我理解有误，以下工具并非是这个用途，请在回帖内指出）</p><p>好推二维码：HotApp微信小程序统计-小程序参数二维码生成和精准统计平台</p><p>草料二维码：草料微信小程序参数二维码生成器</p><p>阿拉丁二维码：阿拉丁-二维码生成王</p><h2 id="相关讨论"><a href="#相关讨论" class="headerlink" title="相关讨论"></a>相关讨论</h2><h3 id="讨论一：带参二维码数量问题"><a href="#讨论一：带参二维码数量问题" class="headerlink" title="讨论一：带参二维码数量问题"></a>讨论一：带参二维码数量问题</h3><p>1、在公众平台首页的通知中说是限制1w个<br>2、通过接口获得带参数二维码。最多可生成带参数二维码10000个，请谨慎调用。<br>可参考调用文档。但是调用文档里面却又说是无数个<br>tip：生成二维码的总数不限，但接口调用每天上限 100000 次。<br>那么到底是什么情况？<br>是只能生成1w个，还是每天只能生成1w个，还是只能生成1w个并且每天只能扫码访问1w次？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">生成的数量无限制，但是每天只能调用接口100000次；另外，扫码访问次数也没有限制。</span><br></pre></td></tr></table></figure></p><h3 id="讨论二：获取页面二维码的接口，怎么老是提示错误啊"><a href="#讨论二：获取页面二维码的接口，怎么老是提示错误啊" class="headerlink" title="讨论二：获取页面二维码的接口，怎么老是提示错误啊"></a>讨论二：获取页面二维码的接口，怎么老是提示错误啊</h3><p>代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wx.request(&#123; <span class="attr">url</span>: <span class="string">'https://api.weixin.qq.com/cgi-bin/wxaapp/createwxaqrcode?access_token='</span>+app.globalData.token,</span><br><span class="line"> data: &#123;<span class="string">'path'</span>: <span class="string">"/pages/my/my?uid=1"</span>,<span class="string">'width'</span>: <span class="number">430</span>&#125;,</span><br><span class="line"> header: &#123; <span class="string">'content-type'</span>: <span class="string">'application/json'</span> &#125;, </span><br><span class="line"> success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123; <span class="built_in">console</span>.log(res.data) &#125;, </span><br><span class="line"> fail:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123; <span class="built_in">console</span>.log(<span class="string">'isFail'</span>) &#125; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>输出的结果是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;errcode: 44002, errmsg: &quot;empty post data hint: [tB1Kha0354vr18]&quot;&#125;</span><br></pre></td></tr></table></figure></p><p>说是post data 是空的，哪位高人能帮忙解决下，多谢了！！！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">问题解决了，method: &quot;POST&quot;,只能通post方式传参数怎么文档也不说清楚？？？</span><br></pre></td></tr></table></figure></p><h3 id="相关讨论三：有大神-做过-小程序-二维码-获取吗"><a href="#相关讨论三：有大神-做过-小程序-二维码-获取吗" class="headerlink" title="相关讨论三：有大神 做过 小程序 二维码 获取吗"></a>相关讨论三：有大神 做过 小程序 二维码 获取吗</h3><p>小程序 获取二维码 接口 48001 无权限<br><img src="https://user-gold-cdn.xitu.io/2018/8/4/16502e8edde54a7a?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">必须是已经上线的小程序才可以获取二维码</span><br></pre></td></tr></table></figure></p><h3 id="相关讨论四：生成二维码接口问题"><a href="#相关讨论四：生成二维码接口问题" class="headerlink" title="相关讨论四：生成二维码接口问题"></a>相关讨论四：生成二维码接口问题</h3><p>生成二维码接口问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;errcode&quot;:40159,&quot;errmsg&quot;:&quot;param path length invalid hint: [thH2ka0199vr23]&quot;&#125;</span><br></pre></td></tr></table></figure></p><p>但长度不超（且比较短）和内容都是app.json定义好的，小程序也正式发布了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">找到原因了，是以json格式发过去。</span><br></pre></td></tr></table></figure></p><h3 id="相关讨论五：请教下各位，怎么样能把生成的二维码在界面上显示出来-二维码是在前端生成的"><a href="#相关讨论五：请教下各位，怎么样能把生成的二维码在界面上显示出来-二维码是在前端生成的" class="headerlink" title="相关讨论五：请教下各位，怎么样能把生成的二维码在界面上显示出来　二维码是在前端生成的"></a>相关讨论五：请教下各位，怎么样能把生成的二维码在界面上显示出来　二维码是在前端生成的</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">前端哪有二维码， 二维码要么你自己后台做，要么官方接口做，都是后台的，</span><br><span class="line">发送参数出去， 请求回来得到 图片url， 用下载api，</span><br><span class="line">把文件下载下来就可以了；</span><br></pre></td></tr></table></figure><p>前端调用createwxaqrcode　可以返回数据啊，就是怎么转成图片，这个是后台请求官方接口，返回的图片；<br><img src="https://user-gold-cdn.xitu.io/2018/8/4/16502e8eddf4d2c5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不过，他返回的不是图片下载路径，而是就是一张图片文件， </span><br><span class="line">你得用后台，下载这张图片，返回你服务器这行图片的路径，</span><br><span class="line">再下载到手机了；</span><br></pre></td></tr></table></figure></p><h2 id="微信小程序参数二维码的应用场景"><a href="#微信小程序参数二维码的应用场景" class="headerlink" title="微信小程序参数二维码的应用场景"></a>微信小程序参数二维码的应用场景</h2><p>微信已经成为人与人沟通的重要工具，微信小程序的出现，更便捷地实现了人与物、人与服务的连接。而这些连接的重要入口，就是二维码。可以预见很多熟悉的场景：当你在收费停车区域停车，只需要用微信扫一扫停车位边上对应的二维码，对应的小程序就会自动计算你在哪个位置停了多久，你只需要直接在小程序上支付停车费即可。当你在餐厅点餐，只需要用微信扫一扫对应桌子上的二维码，即可完成点餐，服务员就会把对应的餐食送到。而你就餐完毕，还可以直接一键支付餐费，甚至对服务打分。微信小程序推出后，以上各种服务场景，搭建在微信小程序上，实现越来越多便利的功能。这些场景的实现，不再需要依靠复杂的app，小程序和微信公众号进行打通，快速实现各类服务功能。而以上场景的应用，入口就是“带参数的小程序二维码”。对应的停车位、对应的餐桌，即对应小程序的特定页面，智能化地方便用户使用和操作，而服务提供者，还可以实时监控使用行为、渠道数据等。</p><h2 id="一步步记录自己的踩坑历程-我要做到我技术不是最好的，但我给你总结的小程序的东西是最简单粗暴的哈哈哈"><a href="#一步步记录自己的踩坑历程-我要做到我技术不是最好的，但我给你总结的小程序的东西是最简单粗暴的哈哈哈" class="headerlink" title="一步步记录自己的踩坑历程~我要做到我技术不是最好的，但我给你总结的小程序的东西是最简单粗暴的哈哈哈"></a>一步步记录自己的踩坑历程~我要做到我技术不是最好的，但我给你总结的小程序的东西是最简单粗暴的哈哈哈</h2><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a511249dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/8/4/16502e26580f2d94?imageView2/1/w/1080/h/320/q/85/format/webp/interlace/1&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个是带参数小程序码，我们项目里用到的就是，身份不同带不同参数，然后请求接口。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;onLoad(options) &amp;#123;&lt;span class=&quot;comment&quot;&gt;//用户授权操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;options.db ? wx.setStorageSync(&lt;span class=&quot;string&quot;&gt;&#39;dbid&#39;&lt;/span&gt;, options.db) : &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//分享功能逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wx.setStorageSync(&lt;span class=&quot;string&quot;&gt;&#39;scene&#39;&lt;/span&gt;, options.scene)&lt;span class=&quot;comment&quot;&gt;// 这里就是从url获取的的参数，发送给后端大哥，然后让他去请求接口生成。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;utils.login(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handleLogin.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;),&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handleReset.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; card = wx.getStorageSync(&lt;span class=&quot;string&quot;&gt;&#39;UserCard&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;show = wx.getStorageSync(&lt;span class=&quot;string&quot;&gt;&#39;seller&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;db = wx.getStorageSync(&lt;span class=&quot;string&quot;&gt;&#39;dbid&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ifHave = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(card.distribution_id!=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ifHave = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ifHave = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setData(&amp;#123;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        userId:card.user_id,     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dbShow:ifHave &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实很简单，主要当时调试的时候，有一个坑提醒一下。小程序码唤醒的是你线上发布过的小程序，也怪自己当时没有好好读文档吃的亏。哈哈 。所以我就总结了一下。&lt;br&gt;
    
    </summary>
    
    
      <category term="微信小程序" scheme="https://www.jonathon.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Koa2+co-wechat快速搭建微信公众号服务器配置</title>
    <link href="https://www.jonathon.cn/koa2.html"/>
    <id>https://www.jonathon.cn/koa2.html</id>
    <published>2018-07-24T12:53:12.000Z</published>
    <updated>2018-07-25T01:44:32.982Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-gold-cdn.xitu.io/2018/7/24/164cc7334b3042aa?imageView2/1/w/1080/h/320/q/85/format/webp/interlace/1"></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我多嘴，说我知道微信公众号的配置流程，然后公司原来负责公众号的人离职了，让我先研究然后去教后端大哥，我也是醉了。但是多学一种东西，又何乐而不为呢。本来我也在学习 koa2，想给自己的小程序写接口。于是就开始了踩坑之路，也感谢网上很多大佬的分享。</p><h2 id="本地开发调试环境搭建"><a href="#本地开发调试环境搭建" class="headerlink" title="本地开发调试环境搭建"></a>本地开发调试环境搭建</h2><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- MacOs</span><br><span class="line">- Node v8<span class="number">.9</span><span class="number">.1</span></span><br><span class="line">- Koa2</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="微信公众平台开发的基本原理"><a href="#微信公众平台开发的基本原理" class="headerlink" title="微信公众平台开发的基本原理"></a>微信公众平台开发的基本原理</h3><p>我们先来看看微信公众平台开发的基本原理：在进行微信开发的时候,需要在我们在自己的服务器上部署服务对微信消息进行处理。微信服务器就相当于一个转发服务器。终端（手机、Pad 等）发起请求至微信服务器，微信服务器然后将请求转发给自定义服务（这里就是我们的具体实现）。服务处理完毕，然后转发给微信服务器，微信服务器再将具体响应回复到终端，通信协议为：HTTP；数据格式为：XML。我们的服务需要做的就是对请求做出响应，解析 XML,进行相应的处理后再返回特定的 XML。</p><h3 id="ngrok-微信本地开发"><a href="#ngrok-微信本地开发" class="headerlink" title="ngrok 微信本地开发"></a>ngrok 微信本地开发</h3><p>这儿我们了解到了接入微信开发需要一个自己的响应服务器，我们可以购买服务器或者新浪云百度云之类的服务。但是在我们开发阶段这样做是很麻烦的，我们需要搭建一个好用的本地调试环境，将内网映射出去，让外网能够访问的。这儿推荐使用<a href="https://www.ngrok.cc/" target="_blank" rel="noopener">Ngrok</a>服务。win、mac 都能方便使用，而且稳定，外网域名是固定的。打开它的网站[<a href="http://www.ngrok.cc/]" target="_blank" rel="noopener">www.ngrok.cc/]</a>(<a href="https://www.ngrok.cc/注册登录然后开通隧道。同时你需要下载相应的客户端在win中这是个批处理文件，运行它然后填入相应的隧道id回车即可，在Mac下载客户端目录中执行如下命令。" target="_blank" rel="noopener">https://www.ngrok.cc/注册登录然后开通隧道。同时你需要下载相应的客户端在win中这是个批处理文件，运行它然后填入相应的隧道id回车即可，在Mac下载客户端目录中执行如下命令。</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sunny clientid 隧道id</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/7/24/164cc4570f22b25b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>这里在ngrok官网上配置端口要设置成8080（设置成别的会造成token验证失败）</p><h2 id="初始化项目并安装依赖"><a href="#初始化项目并安装依赖" class="headerlink" title="初始化项目并安装依赖"></a>初始化项目并安装依赖</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir koa-wechat &amp;&amp; cd koa-wechat &amp;&amp; npm init -y</span><br><span class="line">$ npm i -S koa co-wechat</span><br></pre></td></tr></table></figure><p>推荐 cnpm 下载</p><h2 id="业务逻辑"><a href="#业务逻辑" class="headerlink" title="业务逻辑"></a>业务逻辑</h2><p>新建 app.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//app.js</span></span><br><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">'koa'</span>);</span><br><span class="line"><span class="keyword">const</span> wechat = <span class="built_in">require</span>(<span class="string">'co-wechat'</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Koa();</span><br><span class="line">app.use(<span class="keyword">async</span>(ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (ctx.path === <span class="string">'/wechat'</span>) &#123; <span class="comment">//自定义的路由，微信后台配置的url</span></span><br><span class="line">        <span class="keyword">await</span> next();      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ctx.body = <span class="string">`Hello, koa2! Path is: <span class="subst">$&#123;ctx.path&#125;</span>`</span>;      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    app.use(wechat(&#123;      <span class="attr">token</span>: <span class="string">''</span>, <span class="comment">//微信后台配置的token</span></span><br><span class="line">    appid: <span class="string">''</span>, <span class="comment">//微信公众号的appid</span></span><br><span class="line">    encodingAESKey: <span class="string">''</span> <span class="comment">//微信公众号的encodingAESKey&#125;));</span></span><br><span class="line">    app.listen(<span class="number">8080</span>); <span class="comment">//端口要跟ngrok里配置的对应</span></span><br></pre></td></tr></table></figure><p>确认代码里的变量后，启动服务。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node index.js</span><br></pre></td></tr></table></figure><p>我们运行 app.js，将服务跑起来，浏览器打开 localhost:8080 我们将能够看见返回了 Hello, koa2! Path is。这儿推荐使用 supervisor，它会监视你对代码的改动,并自动重动 Node</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g supervisor</span><br><span class="line">supervisor app.js</span><br></pre></td></tr></table></figure><p>接下来就是用前面讲的 ngrok 进行内网转发了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sunny clientid 隧道id</span><br></pre></td></tr></table></figure><p>此时已经离成功一步之遥。</p><h2 id="接入微信公众平台开发"><a href="#接入微信公众平台开发" class="headerlink" title="接入微信公众平台开发"></a>接入微信公众平台开发</h2><h3 id="接入流程"><a href="#接入流程" class="headerlink" title="接入流程"></a>接入流程</h3><p>接入微信公众平台开发，开发者需要按照如下步骤完成：1、填写服务器配置 2、验证服务器地址的有效性 3、依据接口文档实现业务逻辑我们登录微信公众平台接口测试帐号,登录后填写接口配置信息(你的 url 地址以及 token)，这时肯定不能配置成功的。我们需要验证服务器地址的有效性，开发者提交信息后，微信服务器将发送 GET 请求到填写的服务器地址 URL 上，GET 请求携带参数如下表所示：</p><table><thead><tr><th>名称</th><th>内容</th></tr></thead><tbody><tr><td>signature</td><td>微信加密签名，signature 结合了开发者填写的 token 参数和请求中的 timestamp 参数、nonce 参数。</td></tr><tr><td>timestamp</td><td>时间戳</td></tr><tr><td>nonce</td><td>随机数</td></tr><tr><td>echostr</td><td>随机字符串</td></tr></tbody></table><p>开发者通过检验 signature 对请求进行校验。若确认此次 GET 请求来自微信服务器，原样返回 echostr 参数内容，则接入生效，成为开发者成功，否则接入失败。加密/校验流程如下：<br>将 token、timestamp、nonce 三个参数进行字典序排序<br>将三个参数字符串拼接成一个字符串进行 sha1 加密<br>开发者获得加密后的字符串可与 signature 对比，标识该请求来源于微信</p><h4 id="幸运的是这些事-co-wechat-都帮我们做了～～～-送给作者一朵小发发"><a href="#幸运的是这些事-co-wechat-都帮我们做了～～～-送给作者一朵小发发" class="headerlink" title="幸运的是这些事 co-wechat 都帮我们做了～～～ 送给作者一朵小发发"></a>幸运的是这些事 co-wechat 都帮我们做了～～～ 送给作者一朵小发发</h4><p><img src="https://user-gold-cdn.xitu.io/2018/7/24/164cc52b60a170f3?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><p>进入测试号的页面重新提交接口配置信息，你将会看见一个一闪而过的配置成功过提示框。恭喜，这标志着你正式跳进了微信开发的坑了。</p><h2 id="github-地址"><a href="#github-地址" class="headerlink" title="github 地址"></a>github 地址</h2><p><a href="https://https://github.com/Jiyr0119/Koa2-co-wechat/" target="_blank" rel="noopener">github.com/Jiyr0119/Ko…</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://blog.csdn.net/zhaolandelong/article/details/79086077" target="_blank" rel="noopener">koa2 搭建</a><br><a href="https://segmentfault.com/a/1190000014515495" target="_blank" rel="noopener">koa2 公众号开发</a></p><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a511249dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/7/24/164cc7334b3042aa?imageView2/1/w/1080/h/320/q/85/format/webp/interlace/1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;我多嘴，说我知道微信公众号的配置流程，然后公司原来负责公众号的人离职了，让我先研究然后去教后端大哥，我也是醉了。但是多学一种东西，又何乐而不为呢。本来我也在学习 koa2，想给自己的小程序写接口。于是就开始了踩坑之路，也感谢网上很多大佬的分享。&lt;/p&gt;
&lt;h2 id=&quot;本地开发调试环境搭建&quot;&gt;&lt;a href=&quot;#本地开发调试环境搭建&quot; class=&quot;headerlink&quot; title=&quot;本地开发调试环境搭建&quot;&gt;&lt;/a&gt;本地开发调试环境搭建&lt;/h2&gt;&lt;h3 id=&quot;开发环境&quot;&gt;&lt;a href=&quot;#开发环境&quot; class=&quot;headerlink&quot; title=&quot;开发环境&quot;&gt;&lt;/a&gt;开发环境&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- MacOs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- Node v8&lt;span class=&quot;number&quot;&gt;.9&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- Koa2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="心得分享" scheme="https://www.jonathon.cn/categories/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="koa2" scheme="https://www.jonathon.cn/tags/koa2/"/>
    
      <category term="node.js" scheme="https://www.jonathon.cn/tags/node-js/"/>
    
      <category term="服务端" scheme="https://www.jonathon.cn/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 基本使用指南</title>
    <link href="https://www.jonathon.cn/Markdown-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97.html"/>
    <id>https://www.jonathon.cn/Markdown-基本使用指南.html</id>
    <published>2018-07-21T05:42:42.000Z</published>
    <updated>2018-07-21T06:03:07.201Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用语法"><a href="#常用语法" class="headerlink" title="常用语法"></a>常用语法</h3><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><blockquote><p>语法格式：<strong> ‘#’+’空格’+’文本’ </strong></p></blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="# 一级标题"></a># 一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="## 二级标题"></a>## 二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="### 三级标题"></a>### 三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="#### 四级标题"></a>#### 四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="##### 五级标题"></a>##### 五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="###### 六级标题"></a>###### 六级标题</h6><a id="more"></a><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><blockquote><p>无序列表语法格式：<strong> ‘-‘ + ‘空格’ ＋ ‘文本’ </strong></p></blockquote><ul><li>文本一</li><li>文本二</li><li>文本三</li></ul><blockquote><p>有序列表语法格式：<strong> ‘数字’ + ‘.’ + ‘空格’ + ‘文本’ </strong></p></blockquote><ol><li>文本一</li><li>文本二</li><li>文本三</li></ol><h4 id="链接和图片"><a href="#链接和图片" class="headerlink" title="链接和图片"></a>链接和图片</h4><p>在 Markdown 中插入链接不需要其他按钮，你只需要使用<code>［显示文本］(链接地址)</code>这样的格式语法即可。例如：<br><a href="https://www.jonathon.cn">我的博客</a><br>插入图片的语法与插入链接的语法很像，只是前面多了一个 <code>!</code>.语法如下：<br><code>![图片的标注](图片链接地址)</code></p><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><blockquote><p>语法：<strong> ‘&gt;’+’空格’+’文本’ </strong></p></blockquote><p>例如：</p><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。</p></blockquote><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>如下是代码段的语法：</p><pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是代码段</span><br></pre></td></tr></table></figure></pre><p>例如：</p><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubbleSort</span><span class="params">(alist)</span>:</span></span><br><span class="line"><span class="keyword">for</span> passnum <span class="keyword">in</span> range(len(alist)<span class="number">-1</span>,<span class="number">0</span>,<span class="number">-1</span>):</span><br><span class="line"><span class="comment">#print alist,passnum</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(passnum):</span><br><span class="line"><span class="keyword">if</span> alist[i]&gt;alist[i+<span class="number">1</span>]:</span><br><span class="line">temp = alist[i]</span><br><span class="line">alist[i] = alist[i+<span class="number">1</span>]</span><br><span class="line">alist[i+<span class="number">1</span>] = temp</span><br><span class="line"><span class="keyword">return</span> alist</span><br></pre></td></tr></table></figure></code></pre><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p><strong>Markdown　Extra</strong>　表格语法：</p><table><thead><tr><th>项目</th><th>价格</th></tr></thead><tbody><tr><td>iPhone</td><td>$560</td></tr><tr><td>iPad</td><td>$780</td></tr><tr><td>iMac</td><td>$1000</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">项目 | 价格</span><br><span class="line">-------- | ---</span><br><span class="line">iPhone | $<span class="number">560</span></span><br><span class="line">iPad | $<span class="number">780</span></span><br><span class="line">iMac | $<span class="number">1000</span></span><br></pre></td></tr></table></figure><p>可以使用冒号来定义对齐方式：</p><table><thead><tr><th style="text-align:left">项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td style="text-align:left">iPhone</td><td style="text-align:right">6000 元</td><td style="text-align:center">5</td></tr><tr><td style="text-align:left">iPad</td><td style="text-align:right">3800 元</td><td style="text-align:center">12</td></tr><tr><td style="text-align:left">iMac</td><td style="text-align:right">10000 元</td><td style="text-align:center">234</td></tr></tbody></table><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目 | 价格 | 数量 |</span><br><span class="line">| :-------- | --------:| :--: |</span><br><span class="line">| iPhone | <span class="number">6000</span> 元 | <span class="number">5</span> |</span><br><span class="line">| iPad | <span class="number">3800</span> 元 | <span class="number">12</span> |</span><br><span class="line">| iMac | <span class="number">10000</span> 元 | <span class="number">234</span> |</span><br></pre></td></tr></table></figure><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>以上是最常见的 Markdown 的语法和格式，如果你还希望深入的学习 Markdown，可以参考这里<a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">Markdown语法</a>，</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常用语法&quot;&gt;&lt;a href=&quot;#常用语法&quot; class=&quot;headerlink&quot; title=&quot;常用语法&quot;&gt;&lt;/a&gt;常用语法&lt;/h3&gt;&lt;h4 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;语法格式：&lt;strong&gt; ‘#’+’空格’+’文本’ &lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;# 一级标题&quot;&gt;&lt;/a&gt;# 一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;## 二级标题&quot;&gt;&lt;/a&gt;## 二级标题&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;### 三级标题&quot;&gt;&lt;/a&gt;### 三级标题&lt;/h3&gt;&lt;h4 id=&quot;四级标题&quot;&gt;&lt;a href=&quot;#四级标题&quot; class=&quot;headerlink&quot; title=&quot;#### 四级标题&quot;&gt;&lt;/a&gt;#### 四级标题&lt;/h4&gt;&lt;h5 id=&quot;五级标题&quot;&gt;&lt;a href=&quot;#五级标题&quot; class=&quot;headerlink&quot; title=&quot;##### 五级标题&quot;&gt;&lt;/a&gt;##### 五级标题&lt;/h5&gt;&lt;h6 id=&quot;六级标题&quot;&gt;&lt;a href=&quot;#六级标题&quot; class=&quot;headerlink&quot; title=&quot;###### 六级标题&quot;&gt;&lt;/a&gt;###### 六级标题&lt;/h6&gt;
    
    </summary>
    
      <category term="心得分享" scheme="https://www.jonathon.cn/categories/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Markdown" scheme="https://www.jonathon.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客 域名解析+个性化教程。</title>
    <link href="https://www.jonathon.cn/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E8%B7%AF.html"/>
    <id>https://www.jonathon.cn/Hexo博客搭建之路.html</id>
    <published>2018-07-20T05:26:38.000Z</published>
    <updated>2018-07-23T08:56:41.441Z</updated>
    
    <content type="html"><![CDATA[<p>本文全部内容是基于next主题。</p><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><p><a href="https://www.jianshu.com/p/189fd945f38f" target="_blank" rel="noopener">搭建个人博客-hexo+github详细完整步骤</a><br>大神这里已经写的很清楚了，我就不一一赘述了。送给大神一朵小发发～</p><h2 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h2><p>点击<a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a>或者<a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">这里</a>挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：<br><a id="more"></a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"https://your-url"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"github-corner"</span> aria-label=<span class="string">"View source on Github"</span>&gt;&lt;svg width="80" height="80" viewBox="0 0 250 250" style="fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"&gt;&lt;path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"&gt;&lt;/path&gt;&lt;path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"&gt;&lt;/path&gt;&lt;path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;@keyframes octocat-wave&#123;0%,100%&#123;transform:rotate(0)&#125;20%,60%&#123;transform:rotate(-25deg)&#125;40%,80%&#123;transform:rotate(10deg)&#125;&#125;@media (max-width:500px)&#123;.github-corner:hover .octo-arm&#123;animation:none&#125;.github-corner .octo-arm&#123;animation:octocat-wave 560ms ease-in-out&#125;&#125;&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>然后粘贴刚才复制的代码到themes/next/layout/_layout.swig文件中(放在<div class="headband"></div>的下面)，并把href改为你的github地址</p><h2 id="修改侧边栏自定义网站Icon"><a href="#修改侧边栏自定义网站Icon" class="headerlink" title="修改侧边栏自定义网站Icon"></a>修改侧边栏自定义网站Icon</h2><p>打开主题配置文件（_config.yml），搜索social,在<a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">图标库</a>找自己喜欢的小图标，并将名字复制在如下位置，保存即可<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  掘金: https:<span class="comment">//juejin.im/user/593624feb123db006435aaae || spinner</span></span><br><span class="line">  知乎: https:<span class="comment">//www.zhihu.com/people/gao-jun-jie-87-18/activities || heartbeat</span></span><br></pre></td></tr></table></figure></p><h2 id="实现点击出现桃心效果"><a href="#实现点击出现桃心效果" class="headerlink" title="实现点击出现桃心效果"></a>实现点击出现桃心效果</h2><p>在网址输入如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//7u2ss1.com1.z0.glb.clouddn.com/love.js</span></span><br></pre></td></tr></table></figure></p><p>然后将里面的代码copy一下，新建love.js文件并且将代码复制进去，然后保存。将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout_layout.swig文件,在末尾（在前面引用会出现找不到的bug）添加以下代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/love.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h2 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h2><p>打开\themes\next\source\css_custom\custom.styl,向里面加入：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主页文章添加阴影效果</span></span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: <span class="number">60</span>px;</span><br><span class="line">   margin-bottom: <span class="number">60</span>px;</span><br><span class="line">   padding: <span class="number">25</span>px;</span><br><span class="line">   background: #fff;</span><br><span class="line">   -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>);</span><br><span class="line">   -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span>px rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>在已经搭建好gitpage+hexo的博客的前提下，买域名的步骤就不说了哈。</p><h3 id="解析DNS"><a href="#解析DNS" class="headerlink" title="解析DNS"></a>解析DNS</h3><p>购买完域名之后我们需要解析DNS地址，在管理控制台中的左侧有域名选项，然后找到你的域名，点击后面的“解析”<br><img src="https://user-gold-cdn.xitu.io/2017/4/10/8e42a564bc7bfca393e0ac9c111f608a?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>点击添加解析，记录类型选A或CNAME，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A记录的记录值就是ip地址，github(官方文档)提供了两个IP地址，192.30.252.153和192.30.252.154，这两个IP地址为github的服务器地址，两个都要填上，解析记录设置两个www和@，线路就默认就行了，CNAME记录值填你的github博客网址。如我的是jiyr0119.github.io。</span><br></pre></td></tr></table></figure></p><h3 id="在hexo中添加CNAME文件"><a href="#在hexo中添加CNAME文件" class="headerlink" title="在hexo中添加CNAME文件"></a>在hexo中添加CNAME文件</h3><p>接下来在你的hexo文件夹下source文件夹下新建一个CNAME文件,里面加上你刚刚购买的域名比如我的jonathon.cn<br>然后你就可以hexo clean，hexo g，hexo d 发布你的博客看看效果啦~</p><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a511249dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://juejin.im/post/58eb2fd2a0bb9f006928f8c7" target="_blank" rel="noopener">hexo高阶教程</a><br><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文全部内容是基于next主题。&lt;/p&gt;
&lt;h2 id=&quot;起步&quot;&gt;&lt;a href=&quot;#起步&quot; class=&quot;headerlink&quot; title=&quot;起步&quot;&gt;&lt;/a&gt;起步&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/189fd945f38f&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;搭建个人博客-hexo+github详细完整步骤&lt;/a&gt;&lt;br&gt;大神这里已经写的很清楚了，我就不一一赘述了。送给大神一朵小发发～&lt;/p&gt;
&lt;h2 id=&quot;在右上角或者左上角实现fork-me-on-github&quot;&gt;&lt;a href=&quot;#在右上角或者左上角实现fork-me-on-github&quot; class=&quot;headerlink&quot; title=&quot;在右上角或者左上角实现fork me on github&quot;&gt;&lt;/a&gt;在右上角或者左上角实现fork me on github&lt;/h2&gt;&lt;p&gt;点击&lt;a href=&quot;http://tholman.com/github-corners/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;或者&lt;a href=&quot;https://blog.github.com/2008-12-19-github-ribbons/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这里&lt;/a&gt;挑选自己喜欢的样式，并复制代码。 例如，我是复制如下代码：&lt;br&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.jonathon.cn/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="心得分享" scheme="https://www.jonathon.cn/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="hexo" scheme="https://www.jonathon.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo seo优化</title>
    <link href="https://www.jonathon.cn/hexo-seo%E4%BC%98%E5%8C%96.html"/>
    <id>https://www.jonathon.cn/hexo-seo优化.html</id>
    <published>2018-07-19T03:25:46.000Z</published>
    <updated>2018-07-20T03:27:20.237Z</updated>
    
    <content type="html"><![CDATA[<p>SEO (Search Engine Optimization)，即搜索引擎优化。简单来说，SEO就是您可以使用提升网站排名的所有方法的总称，SEO用于确保您的网站及其内容在搜索引擎结果页面（SERP）上的可见性。</p><h2 id="验证你的网站-让你博客被搜索引擎找到"><a href="#验证你的网站-让你博客被搜索引擎找到" class="headerlink" title="验证你的网站(让你博客被搜索引擎找到)"></a>验证你的网站(让你博客被搜索引擎找到)</h2><p>在谷歌或者百度的搜索链接中，使用以下格式可以直接搜索自己的域名， 如果能搜索到就说明已经被收录，反之则没有。可以直接搜索自己的域名，或者加一些关键词来更好地判断，例如：<br>site: <a href="https://www.jonathon.cn/">https://www.jonathon.cn/</a><br><a id="more"></a></p><h2 id="提交我们的网站"><a href="#提交我们的网站" class="headerlink" title="提交我们的网站"></a>提交我们的网站</h2><p>若未被搜索引擎收录，则需进行以下配置，首先要让搜索引擎先验证我们对网站的所有权，两个搜索引擎提交的入口分别为：<br><a href="https://www.google.com/webmasters/" target="_blank" rel="noopener">Google Search Console</a><br><a href="https://ziyuan.baidu.com/site/" target="_blank" rel="noopener">baidu</a><br>网上有很多验证方式，下载html部署的。<br>但是我验证的时候，老是失败。<br>我就选择了meta标签验证方式<br>打开 themes/next/layout/_partials/head/head.swig 添加两行标签就可以了。也是很方便的～<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=<span class="string">"baidu-site-verification"</span> content=<span class="string">"your code"</span> /&gt;</span><br><span class="line">&lt;meta name=<span class="string">"google-site-verification"</span> content=<span class="string">"your code"</span> /&gt;</span><br><span class="line">然后执行 hexo 部署命令</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></p><p>最后返回验证页面，就可以查看验证是否通过了</p><h2 id="Sitemap"><a href="#Sitemap" class="headerlink" title="Sitemap"></a>Sitemap</h2><p>Sitemap即网站地图，它的作用在于便于搜索引擎更加智能地抓取网站。最简单和常见的sitemap形式，是XML文件，在其中列出网站中的网址以及关于每个网址的其他元数据</p><h3 id="安装sitemap生成插件"><a href="#安装sitemap生成插件" class="headerlink" title="安装sitemap生成插件"></a>安装sitemap生成插件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><h3 id="编辑站点目录下的-config-yml，添加一下字段"><a href="#编辑站点目录下的-config-yml，添加一下字段" class="headerlink" title="编辑站点目录下的_config.yml，添加一下字段"></a>编辑站点目录下的_config.yml，添加一下字段</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#hexo sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line">  之后在执行 hexo g 后， public目录下发现生成了 sitemap.xml和baidusitemap.xml 就表示配置成功了。</span><br></pre></td></tr></table></figure><h3 id="提交sitemap"><a href="#提交sitemap" class="headerlink" title="提交sitemap"></a>提交sitemap</h3><h4 id="向谷歌提交"><a href="#向谷歌提交" class="headerlink" title="向谷歌提交"></a>向谷歌提交</h4><p>向谷歌提交 sitemap 比较简单，登录 <a href="https://www.google.com/webmasters/" target="_blank" rel="noopener">Google Search Console</a> ，选择已经验证过的站点，在抓取 -&gt; 站点地图 中，右上角可看到 添加 / 测试站点地图，添加 sitemap.xml 的链接即可，谷歌效率较高，一般当天或者第二天就能搜到微博了。如图：<br><img src="https://upload-images.jianshu.io/upload_images/6210783-db1d1482aaa09886.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700"></p><h4 id="向百度提交"><a href="#向百度提交" class="headerlink" title="向百度提交"></a>向百度提交</h4><p>与谷歌类似，我们可以直接向百度交 sitemap，登录 <a href="https://ziyuan.baidu.com/" target="_blank" rel="noopener">百度站长平台</a>，点击 网页抓取-&gt; 链接提交，在 自动提交中选择 sitemap，输入自己的域名加 baidusitemap.xml 即可，之后可查看 url 提取是否成功。<br>由于 GitHub 屏蔽了百度的爬虫，即使提交成功，百度知道这里有可供抓取的链接，也不一定能抓取成功。 首先我们先检测一下百度爬虫是否可以抓取网页。在百度站长平台网页抓取-&gt;抓取诊断 中，选择PC UA点击抓取 , 查看抓取状态， 如果显示 抓取失败， 则需要进一步的配置。</p><h5 id="推送方式"><a href="#推送方式" class="headerlink" title="推送方式"></a>推送方式</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如何选择链接提交方式</span><br><span class="line"><span class="number">1</span>、主动推送：最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。</span><br><span class="line"><span class="number">2</span>、自动推送：最为便捷的提交方式，请将自动推送的 JS 代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。</span><br><span class="line"><span class="number">3</span>、sitemap：您可以定期将网站链接放到 sitemap 中，然后将 sitemap 提交给百度。百度会周期性的抓取检查您提交的 sitemap，对其中的链接进行处理，但收录速度慢于主动推送。</span><br><span class="line"><span class="number">4</span>、手动提交：一次性提交链接给百度，可以使用此种方式</span><br><span class="line">next 主题已经部署了自动推送的代码，我们只需在主题配置文件 中找到 baidu_push 字段 , 设置其为 <span class="literal">true</span> 即可。</span><br></pre></td></tr></table></figure><h2 id="添加robots-txt"><a href="#添加robots-txt" class="headerlink" title="添加robots.txt"></a>添加robots.txt</h2><p>robots.txt（统一小写）是一种存放于网站根目录下的ASCII编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。<br>在 source 目录下增加 rebots.txt 文件，网站生成后在网站的根目录(站点目录/public/)下。<br>（请将域名改为自己的网站）<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: <span class="regexp">/</span></span><br><span class="line"><span class="regexp">Allow: /</span>archives/</span><br><span class="line">Allow: <span class="regexp">/categories/</span></span><br><span class="line">Allow: <span class="regexp">/tags/</span></span><br><span class="line"></span><br><span class="line">Disallow: <span class="regexp">/vendors/</span></span><br><span class="line">Disallow: <span class="regexp">/js/</span></span><br><span class="line">Disallow: <span class="regexp">/css/</span></span><br><span class="line">Disallow: <span class="regexp">/fonts/</span></span><br><span class="line">Disallow: <span class="regexp">/vendors/</span></span><br><span class="line">Disallow: <span class="regexp">/fancybox/</span></span><br><span class="line"></span><br><span class="line">Sitemap: https:<span class="comment">//你的域名/sitemap.xml</span></span><br><span class="line">Sitemap: https:<span class="comment">//你的域名/baidusitemap.xml</span></span><br></pre></td></tr></table></figure></p><p>Allow表示允许被访问的，Disallow是不允许的意思。注意后面两个Sitemap就是网站地图了。而网站地图前面说了是给爬虫用的。这里配置在robots中。</p><h2 id="Next主题自带SEO优化选项"><a href="#Next主题自带SEO优化选项" class="headerlink" title="Next主题自带SEO优化选项"></a>Next主题自带SEO优化选项</h2><p>主题配置文件_config.yml中有个选项是seo，默认是false，改成true 即开启了seo优化，如改变博文title等，然后相同文件下有个关键字选项keywords填充上，写博文时最好每篇博文都加上keywords。hexo的根目录配置文件_config.yml中title、subtitle和description也建议填上。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://juejin.im/post/590b451a0ce46300588c43a0" target="_blank" rel="noopener">hexo高阶教程：教你怎么让你的hexo博客在搜索引擎中排第一</a><br><a href="http://www.jning.xin/" target="_blank" rel="noopener">Hexo博客之后续SEO优化</a><br><a href="http://www.yuan-ji.me/Hexo-%E4%BC%98%E5%8C%96%EF%BC%9A%E6%8F%90%E4%BA%A4sitemap%E5%8F%8A%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E7%88%AC%E8%99%AB%E6%8A%93%E5%8F%96-GitHub-Pages-%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">提交 sitemap 及解决百度爬虫无法抓取 GitHub Pages 链接问题</a><br><a href="https://fedoryx.github.io/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%9C%E7%B4%A2-SEO-%E4%BC%98%E5%8C%96-%E8%B0%B7%E6%AD%8C%E7%AF%87/" target="_blank" rel="noopener">Hexo 博客搜索 SEO 优化 – 谷歌篇</a></p><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a511249dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SEO (Search Engine Optimization)，即搜索引擎优化。简单来说，SEO就是您可以使用提升网站排名的所有方法的总称，SEO用于确保您的网站及其内容在搜索引擎结果页面（SERP）上的可见性。&lt;/p&gt;
&lt;h2 id=&quot;验证你的网站-让你博客被搜索引擎找到&quot;&gt;&lt;a href=&quot;#验证你的网站-让你博客被搜索引擎找到&quot; class=&quot;headerlink&quot; title=&quot;验证你的网站(让你博客被搜索引擎找到)&quot;&gt;&lt;/a&gt;验证你的网站(让你博客被搜索引擎找到)&lt;/h2&gt;&lt;p&gt;在谷歌或者百度的搜索链接中，使用以下格式可以直接搜索自己的域名， 如果能搜索到就说明已经被收录，反之则没有。可以直接搜索自己的域名，或者加一些关键词来更好地判断，例如：&lt;br&gt;site: &lt;a href=&quot;https://www.jonathon.cn/&quot;&gt;https://www.jonathon.cn/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.jonathon.cn/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="心得分享" scheme="https://www.jonathon.cn/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="hexo" scheme="https://www.jonathon.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Vue实战技巧</title>
    <link href="https://www.jonathon.cn/Vue%E5%AE%9E%E6%88%98%E6%8A%80%E5%B7%A7.html"/>
    <id>https://www.jonathon.cn/Vue实战技巧.html</id>
    <published>2018-07-18T09:14:08.000Z</published>
    <updated>2018-07-18T12:23:02.528Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue-在methods中使用filter的方法"><a href="#Vue-在methods中使用filter的方法" class="headerlink" title="Vue 在methods中使用filter的方法"></a>Vue 在methods中使用filter的方法</h2><p>需求是 要格式化银行卡 我们项目用了一个ui组件库<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 众所周知 filter 是可以在dom里面的 但是需求就是各种个样 唉</span></span><br><span class="line">&lt;span&gt;(&#123;&#123;item.bdactp | cardtpFilter&#125;&#125;)&lt;<span class="regexp">/span&gt;&lt;/</span>p&gt; </span><br><span class="line"></span><br><span class="line">&lt;popup-picker title=<span class="string">"卡号"</span> @on-change=<span class="string">"handleBankCard"</span> :data=<span class="string">"cardList"</span> v-model=<span class="string">"cardNumber"</span>&gt;&lt;/popup-picker&gt;</span><br></pre></td></tr></table></figure></p><p>于是找到了一个方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$options.filters[filter](...args)   <span class="comment">//这种方法很简单,也很实用</span></span><br><span class="line"><span class="comment">//实践</span></span><br><span class="line">bankList.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      arr.push(<span class="keyword">this</span>.$options.filters[<span class="string">'cardnoFilter'</span>](item.bdacct));<span class="comment">// 如果要在methods里面用filter的方法 这样写</span></span><br><span class="line">      <span class="keyword">this</span>.telNum = item.phonno;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="Vue-Object-defineProperty最佳实践"><a href="#Vue-Object-defineProperty最佳实践" class="headerlink" title="Vue Object.defineProperty最佳实践"></a>Vue Object.defineProperty最佳实践</h2><p>Object.defineProperty ，顾名思义，为对象定义属性。在js中我们可以通过下面这几种方法定义属性：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// (1) define someOne property name</span></span><br><span class="line">someOne.name = <span class="string">'cover'</span>;</span><br><span class="line"><span class="comment">//or use (2) </span></span><br><span class="line">someOne[<span class="string">'name'</span>] = <span class="string">'cover'</span>;</span><br><span class="line"><span class="comment">// or use (3) defineProperty</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(someOne, <span class="string">'name'</span>, &#123;</span><br><span class="line">    value : <span class="string">'cover'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>语法：<br>Object.defineProperty(object, propertyname, descriptor)<br>参数：<br>object 必需。 要在其上添加或修改属性的对象。 这可能是一个本机 JavaScript对象（即用户定义的对象或内置对象）或 DOM 对象。<br>propertyname 必需。 一个包含属性名称的字符串。<br>descriptor 必需。 属性描述符。 它可以针对数据属性或访问器属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">最佳实践</span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">const</span> store = <span class="built_in">window</span>.sessionStorage;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StoreMethod</span> </span>&#123;</span><br><span class="line">  set(key, val) &#123;</span><br><span class="line">    <span class="keyword">if</span> (key &amp;&amp; <span class="keyword">typeof</span> key === <span class="string">'string'</span>) &#123;</span><br><span class="line">      store.setItem(key, <span class="built_in">JSON</span>.stringify(val));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  get(key) &#123;</span><br><span class="line">    <span class="keyword">const</span> value = store.getItem(key);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> value !== <span class="string">'string'</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(value);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="keyword">return</span> value || <span class="literal">undefined</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  remove(key) &#123;</span><br><span class="line">    <span class="keyword">const</span> val = <span class="keyword">this</span>.get(key);</span><br><span class="line">    store.removeItem(key);</span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">  &#125;</span><br><span class="line">  has(key) &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.get(key) &amp;&amp; <span class="keyword">this</span>.get(key) !== <span class="string">'undefined'</span>) &#123;</span><br><span class="line">      result = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">  clear() &#123;</span><br><span class="line">    store.clear();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Object</span>.defineProperty(Vue.prototype, <span class="string">'$storage'</span>, &#123;</span><br><span class="line">  value: <span class="keyword">new</span> StoreMethod()</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line">    <span class="keyword">let</span> info = <span class="keyword">this</span>.$storage.get(<span class="string">'turnOut'</span>);</span><br></pre></td></tr></table></figure><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a511249dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Vue-在methods中使用filter的方法&quot;&gt;&lt;a href=&quot;#Vue-在methods中使用filter的方法&quot; class=&quot;headerlink&quot; title=&quot;Vue 在methods中使用filter的方法&quot;&gt;&lt;/a&gt;Vue 在methods中使用filter的方法&lt;/h2&gt;&lt;p&gt;需求是 要格式化银行卡 我们项目用了一个ui组件库&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 众所周知 filter 是可以在dom里面的 但是需求就是各种个样 唉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span&amp;gt;(&amp;#123;&amp;#123;item.bdactp | cardtpFilter&amp;#125;&amp;#125;)&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/span&amp;gt;&amp;lt;/&lt;/span&gt;p&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;popup-picker title=&lt;span class=&quot;string&quot;&gt;&quot;卡号&quot;&lt;/span&gt; @on-change=&lt;span class=&quot;string&quot;&gt;&quot;handleBankCard&quot;&lt;/span&gt; :data=&lt;span class=&quot;string&quot;&gt;&quot;cardList&quot;&lt;/span&gt; v-model=&lt;span class=&quot;string&quot;&gt;&quot;cardNumber&quot;&lt;/span&gt;&amp;gt;&amp;lt;/popup-picker&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;于是找到了一个方法&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$options.filters[filter](...args)   &lt;span class=&quot;comment&quot;&gt;//这种方法很简单,也很实用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//实践&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bankList.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      arr.push(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$options.filters[&lt;span class=&quot;string&quot;&gt;&#39;cardnoFilter&#39;&lt;/span&gt;](item.bdacct));&lt;span class=&quot;comment&quot;&gt;// 如果要在methods里面用filter的方法 这样写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.telNum = item.phonno;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://www.jonathon.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.jonathon.cn/tags/vue/"/>
    
      <category term="javascript" scheme="https://www.jonathon.cn/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 404的问题</title>
    <link href="https://www.jonathon.cn/Hexo-404%E7%9A%84%E9%97%AE%E9%A2%98.html"/>
    <id>https://www.jonathon.cn/Hexo-404的问题.html</id>
    <published>2018-07-18T04:11:40.000Z</published>
    <updated>2018-07-20T03:27:18.336Z</updated>
    
    <content type="html"><![CDATA[<p>我刚开始遇到的问题是修改了config.yml下的这个配置<br>URL<br>If your site is put in a subdirectory, set url as ‘<a href="http://yoursite.com/child&#39;" target="_blank" rel="noopener">http://yoursite.com/child&#39;</a> and root as ‘/child/‘<br>url: <a href="https://www.jonathon.cn">https://www.jonathon.cn</a><br>root: /<br><a id="more"></a><br>部署之后404</p><p>调试执行到 hexo s 后，访问localhost:4000 出现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cannot GET /</span><br></pre></td></tr></table></figure><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>需要执行 npm intall  或者 使用淘宝镜像  cnpm i</p><h2 id="完整步骤示例"><a href="#完整步骤示例" class="headerlink" title="完整步骤示例"></a>完整步骤示例</h2><p>npm install hexo-cli -g<br>hexo init<br>npm install<br>hexo server</p><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a511249dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我刚开始遇到的问题是修改了config.yml下的这个配置&lt;br&gt;URL&lt;br&gt;If your site is put in a subdirectory, set url as ‘&lt;a href=&quot;http://yoursite.com/child&amp;#39;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://yoursite.com/child&amp;#39;&lt;/a&gt; and root as ‘/child/‘&lt;br&gt;url: &lt;a href=&quot;https://www.jonathon.cn&quot;&gt;https://www.jonathon.cn&lt;/a&gt;&lt;br&gt;root: /&lt;br&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="https://www.jonathon.cn/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
      <category term="心得分享" scheme="https://www.jonathon.cn/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="hexo" scheme="https://www.jonathon.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>我眼中的Vue</title>
    <link href="https://www.jonathon.cn/%E6%88%91%E7%9C%BC%E4%B8%AD%E7%9A%84vue.html"/>
    <id>https://www.jonathon.cn/我眼中的vue.html</id>
    <published>2018-07-17T04:24:49.143Z</published>
    <updated>2018-08-04T03:18:04.375Z</updated>
    
    <content type="html"><![CDATA[<h2 id="把自己的一些笔记放到这里，正好跟人知识共享，又复习了自己的-vue-～（希望大佬能多多指点指点）"><a href="#把自己的一些笔记放到这里，正好跟人知识共享，又复习了自己的-vue-～（希望大佬能多多指点指点）" class="headerlink" title="把自己的一些笔记放到这里，正好跟人知识共享，又复习了自己的 vue ～（希望大佬能多多指点指点）"></a>把自己的一些笔记放到这里，正好跟人知识共享，又复习了自己的 vue ～（希望大佬能多多指点指点）</h2><h2 id="初识-Vue"><a href="#初识-Vue" class="headerlink" title="初识 Vue"></a>初识 Vue</h2><p>Vue.js 不支持 IE8 及其以下版本，因为 Vue.js 使用了 IE8 不能模拟的 ECMAScript 5 特性。</p><p>Vue.js 支持所有兼容 ECMAScript 5 的浏览器。<br><img src="http://p3.pstatp.com/large/434e00024fdc1d230d6e"></p><a id="more"></a><p>下载完 vue.js 控制台输入 Vue 测试成功否</p><p><img src="http://p1.pstatp.com/large/434e00024fdb69aa2352"></p><p>独立构建和运行时构建</p><p>独立构建：打包的时候用 babel 编译代码</p><p>运行时构建：一起打包上线然后适时监控，但是占用空间很大。</p><p>vue 构建项目不用 webpack 了 因为有了 vue.cli。</p><h2 id="Vue-常用指令"><a href="#Vue-常用指令" class="headerlink" title="Vue 常用指令"></a>Vue 常用指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">v-：指令</span><br><span class="line"></span><br><span class="line">&#123;&#123;&#125;&#125;：叫做插值表达式</span><br><span class="line"></span><br><span class="line">v-text=“” 和&#123;&#123;&#125;&#125;插值一样</span><br><span class="line"></span><br><span class="line">v-bind: （：）可以寻找下面的变量</span><br><span class="line"></span><br><span class="line">v-if=“true” 直接影响 dom 节点是否存在 false 则标签不再存在 直接删除了</span><br><span class="line"></span><br><span class="line">v-show=“seen” seen 是展示，false 是不展示 但是节点还在 相当于隐藏</span><br><span class="line"></span><br><span class="line">v-for=&quot;&quot; 循环</span><br><span class="line"></span><br><span class="line">v-on：click （@click） 监听的事件名字</span><br><span class="line"></span><br><span class="line">v-model=“” 双向绑定</span><br><span class="line"></span><br><span class="line">v-once： 限制，只有第一次绑定的时候显示值， 然后就不变了</span><br><span class="line"></span><br><span class="line">v-html： 显示内容中去除标签</span><br></pre></td></tr></table></figure><p>methods：要添加的事件</p><p><img src="http://p3.pstatp.com/large/43520000aed03b2cf265"><br><img src="http://p3.pstatp.com/large/434f0002383755af295e"><br><img src="http://p3.pstatp.com/large/434d00024d41eea0916e"><br>修饰符</p><p>.prevent 阻止默认行为 (methods 里面就是 event.preventDefault())</p><p>.stop 阻止冒泡<br><img src="http://p9.pstatp.com/large/43510002290cf7405d3d"></p><p>过滤器（管道命令）</p><p>前边是个变量</p><p>后面那是过滤器的名称<br><img src="http://p1.pstatp.com/large/434e00024fdef50a137c"></p><p>date.now 不是一个内部依赖<br><img src="http://p1.pstatp.com/large/43520000aed15a5aeaf1"></p><p>todolist<br><img src="http://p3.pstatp.com/large/434f00023839cc439c45"></p><p>表达式<br><img src="http://p1.pstatp.com/large/434d00024d4492542dfa"></p><p>app 是实例</p><p>el：”#root” = app.$mount(“root”)</p><p>watch 监听 message 的变化 es6 里面如果用 this，this 指向的是 data</p><p><img src="http://p3.pstatp.com/large/434e00024fdfdb0d464f"></p><h2 id="Vue-父子组件传值"><a href="#Vue-父子组件传值" class="headerlink" title="Vue 父子组件传值"></a>Vue 父子组件传值</h2><p>子组件<br><img src="http://p1.pstatp.com/large/43510002290e3ad147f9"><br>父组件<br><img src="http://p1.pstatp.com/large/434f0002383a38ea8558"><br><img src="http://p9.pstatp.com/large/435000022e723d050d08"></p><h2 id="Vue生命周期"><a href="#Vue生命周期" class="headerlink" title="Vue生命周期"></a>Vue生命周期</h2><p>在页面生命周期的某一个点上执行某一个函数，叫做钩子。</p><p>beforeCreate 创建虚拟dom之前执行的</p><p>create 创建虚拟dom之后执行的</p><p>bofoereMount 挂载，渲染dom之前执行的</p><p>mounted 挂载完，页面渲染之后执行的</p><p>beforeUpdate 数据改变的时候执行</p><p>updated 数据改变的时候执行</p><p>beforeDestroy 当你要销毁这个实例的时候执行 app.$destroy()</p><p>destroyed 当你要销毁这个实例的时候执行 app.$destroy()<br><img src="http://p3.pstatp.com/large/435000022e7589d27f20"></p><h2 id="Vue数组方法"><a href="#Vue数组方法" class="headerlink" title="Vue数组方法"></a>Vue数组方法</h2><p>变异方法指的的是原数组进行改变<br><img src="http://p3.pstatp.com/large/43520000aed573d2d8d5"><br>非变异方法是指不改变原数组<br><img src="http://p3.pstatp.com/large/4351000229112ea7b5e1"></p><h2 id="Vue组件"><a href="#Vue组件" class="headerlink" title="Vue组件"></a>Vue组件</h2><p>子组件：定义一个变量 然后用compinents接收定义（标签名：变量名）</p><p>用变量定义的局部组件<br><img src="http://p9.pstatp.com/large/43530000286ed1219ad8"><br>用Vue.component定义的全局组件<br><img src="http://p1.pstatp.com/large/435000022e740f419ab7"><br>双向绑定<br><img src="http://p1.pstatp.com/large/434f0002383e2c3f2341"><br>异步更新队列<br><img src="http://p3.pstatp.com/large/435000022e76fefaa72e"></p><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a511249dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;把自己的一些笔记放到这里，正好跟人知识共享，又复习了自己的-vue-～（希望大佬能多多指点指点）&quot;&gt;&lt;a href=&quot;#把自己的一些笔记放到这里，正好跟人知识共享，又复习了自己的-vue-～（希望大佬能多多指点指点）&quot; class=&quot;headerlink&quot; title=&quot;把自己的一些笔记放到这里，正好跟人知识共享，又复习了自己的 vue ～（希望大佬能多多指点指点）&quot;&gt;&lt;/a&gt;把自己的一些笔记放到这里，正好跟人知识共享，又复习了自己的 vue ～（希望大佬能多多指点指点）&lt;/h2&gt;&lt;h2 id=&quot;初识-Vue&quot;&gt;&lt;a href=&quot;#初识-Vue&quot; class=&quot;headerlink&quot; title=&quot;初识 Vue&quot;&gt;&lt;/a&gt;初识 Vue&lt;/h2&gt;&lt;p&gt;Vue.js 不支持 IE8 及其以下版本，因为 Vue.js 使用了 IE8 不能模拟的 ECMAScript 5 特性。&lt;/p&gt;
&lt;p&gt;Vue.js 支持所有兼容 ECMAScript 5 的浏览器。&lt;br&gt;&lt;img src=&quot;http://p3.pstatp.com/large/434e00024fdc1d230d6e&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://www.jonathon.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vue" scheme="https://www.jonathon.cn/tags/vue/"/>
    
      <category term="javascript" scheme="https://www.jonathon.cn/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>送给写小程序的你。</title>
    <link href="https://www.jonathon.cn/%E9%80%81%E7%BB%99%E5%86%99%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%BD%A0.html"/>
    <id>https://www.jonathon.cn/送给写小程序的你.html</id>
    <published>2018-07-05T12:13:27.847Z</published>
    <updated>2018-08-17T07:51:12.478Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://user-gold-cdn.xitu.io/2018/7/24/164cc72d15bfcd7d?imageView2/1/w/1080/h/320/q/85/format/webp/interlace/1"></p><h2 id="声明：本人也是菜鸟一只，写的不好的地方，大佬们指点指点。"><a href="#声明：本人也是菜鸟一只，写的不好的地方，大佬们指点指点。" class="headerlink" title="声明：本人也是菜鸟一只，写的不好的地方，大佬们指点指点。"></a>声明：本人也是菜鸟一只，写的不好的地方，大佬们指点指点。</h2><p>微信小程序商城，持续更新。先说说写小程序的渊源吧，我之前认识的大佬写了一个比较简单的小程序，我改了改样式于是成功的有了我的第一个小程序。<br>然后我在找工作的时候，简历上写了这么一回事，结果进来之后，leader 语重心长的对我说，公司的小程序商城就教给你了，重点是公司没有一个人会微信小程序。WTF，不是招我进来写 VUE 的吗? 于是就开始了我从零开始写微信小程序商城之路。<br>微信小程序的官方文档什么的我就不说了，那是肯定要看的。说说我这几天开始写我遇到的问题。希望对将要写小程序的你能有一丝丝帮助，因为本人也很菜。</p><a id="more"></a><h2 id="微信小程序之-rpx"><a href="#微信小程序之-rpx" class="headerlink" title="微信小程序之 rpx"></a>微信小程序之 rpx</h2><p>在微信官方的文档中，我们看到这样一句话：在 iPhone 6 上，屏幕宽度为 375px，共有 750 个物理像素，则 750rpx = 375px = 750 物理像素，1rpx = 0.5px = 1 物理像素。<br>开发微信小程序时设计师可以用 iPhone 6 作为视觉稿的标准。也就是说，设计师在设计小程序时，可以这样做：直接以 iPhone 6 的屏幕尺寸（375×667）用作视觉稿尺寸，1 px = 0.5 rpx；以 1 px = 1 rpx 的标准，将设计稿尺寸设定为 750×1334。<br>其实总的来说就是，你跟 UI 小姐姐说一声，然后就可以很爽的写样式了。</p><h2 id="微信小程序之容器视图"><a href="#微信小程序之容器视图" class="headerlink" title="微信小程序之容器视图"></a>微信小程序之容器视图</h2><p>view 其实就是 div，嘿嘿嘿就是这么简单粗暴的解释。<br>scroll-view 可滚动视图区域。 这个需要注意的是，横向滚动的视图区域。重要的是这两个行内样式，其他的官方文档也说的比较清楚。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">"supply-scroll bg"</span>&gt;</span><br><span class="line">  &lt;scroll-view</span><br><span class="line">    <span class="class"><span class="keyword">class</span></span>=<span class="string">"scroll-box"</span></span><br><span class="line">    scroll-x=<span class="string">"true"</span></span><br><span class="line">    style=<span class="string">"width: 100%;white-space: nowrap; display: flex"</span></span><br><span class="line">  &gt;</span><br><span class="line">    &lt;view</span><br><span class="line">      <span class="class"><span class="keyword">class</span></span>=<span class="string">"scroll-items"</span></span><br><span class="line">      wx:<span class="keyword">for</span>=<span class="string">"&#123;&#123;scrollList&#125;&#125;"</span></span><br><span class="line">      wx:key=<span class="string">"index"</span></span><br><span class="line">      data-index=<span class="string">"&#123;&#123;index&#125;&#125;"</span></span><br><span class="line">      style=<span class="string">"display: inline-block"</span></span><br><span class="line">    &gt;</span><br><span class="line">      &lt;image src=<span class="string">"&#123;&#123;item.url&#125;&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"scroll-image"</span> /&gt;</span><br><span class="line">    &lt;<span class="regexp">/view&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>scroll-view&gt;</span><br><span class="line">&lt;<span class="regexp">/view&gt;</span></span><br></pre></td></tr></table></figure><h2 id="微信小程序之-UI-框架"><a href="#微信小程序之-UI-框架" class="headerlink" title="微信小程序之 UI 框架"></a>微信小程序之 UI 框架</h2><p>这个，很有意思，当我写完一个我觉得很有灵性的选项卡的时候，以前哥们告我微信小程序有个框架你看看去。。。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view wx:<span class="keyword">for</span>=<span class="string">"&#123;&#123;tab&#125;&#125;"</span> wx:key=<span class="string">"index"</span> data-id=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> data-index=<span class="string">"&#123;&#123;index&#125;&#125;"</span>   bindtap=<span class="string">"switchTab"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-list &#123;&#123;tabIndex === index?'on':''&#125;&#125;"</span>&gt;</span><br><span class="line"> &#123;&#123;item.name&#125;&#125;</span><br><span class="line">&lt;<span class="regexp">/view&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029d0ae7fa5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>不 BB，直接上地址 <a href="https://github.com/Tencent/weui-wxss" target="_blank" rel="noopener">weui</a><br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029d0b22756?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>先写到这里，周六加班的午休时间，冒着被同时打死的危险写的，如果有什么写的不好的地方，请大家多多包涵，我也还会分享我遇到的问题。<br>最近又看到有赞的微信小程序 UI 还是老规矩直接上地址：<br><a href="https://github.com/youzan/zanui-weapp" target="_blank" rel="noopener">zanui-weapp</a></p><h2 id="微信小程序之-switchTab"><a href="#微信小程序之-switchTab" class="headerlink" title="微信小程序之 switchTab"></a>微信小程序之 switchTab</h2><p>页面跳转大家官网上看的 navigator 用法你套着用就可以了，今天分享一下我在小程序中遇到的页面跳转的问题。我写的是一个电商商城小程序，跳转到详情页之后有两个点击跳转的 icon 如图：<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029d0ca5f47?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>聪明的你，肯定猜出来这两个 icon 是跳转到哪的，肯定也是 bindtap，然后 wx.navigator 就搞定了。两个简单的页面跳转嘛，然后居然就是这两个问题卡了我一个多小时，后来还是在微信群里问大佬们才解决的，因为自己看文档不仔细，跳转的这两个页面是微信官方底部 tab 的路径如图：<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029d0eb9f9e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>问题是出在官方的 tabbar 中你用了这几个路径如图：</p><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029d0e258d1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>然后解决方法为:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">handleGoIndex: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     wx.switchTab(&#123;<span class="attr">url</span>: <span class="string">'/pages/index/index'</span>&#125;)</span><br><span class="line">     &#125;,</span><br><span class="line">handleGoCart: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    wx.switchTab(&#123;<span class="attr">url</span>: <span class="string">'/pages/cart/index'</span>&#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h2 id="微信小程序之禁止页面下拉"><a href="#微信小程序之禁止页面下拉" class="headerlink" title="微信小程序之禁止页面下拉"></a>微信小程序之禁止页面下拉</h2><p>有的时候你会遇到不让页面下拉，如果你以为我说的是下拉刷新的api的话那就图样了。就是不让你下滑的时候出来那个白条。直接上代码了：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;view catchtouchmove=<span class="string">"stopDrag"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">  stopDrag()&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>但是这个慎用，我也想在这里如果有大神能指点指点就最好了，这个的效果是可视区域全部静止滑动… 拼多多的小程序首页就是不会出现那个下拉的白条，但能上滑看商品信息，求教～<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029eb0cfe09?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>最新解决方法，在app。json 里面增加一条这个属性，就可以禁止滚动。</p><h2 id="微信小程序之页面深度"><a href="#微信小程序之页面深度" class="headerlink" title="微信小程序之页面深度"></a>微信小程序之页面深度</h2><p>在测试自己的项目的时候，发现明明逻辑没问题，语法也没问题。突然想起来小程序的页面栈是五个，于是特别中二的数了一下自己的页面跳转哈哈… 才发现当时自己的理解是错误的，刚开始不细心看文档，我以为这五个页面是超过五个会把新的加进页面栈，第一个打开的销毁。我就无脑用 wx.navigateTo，遇到这个问题后用了 wx.redirectTo 就解决了。但是谁让我好学呢，于是发现一个大神写的特别完美的理解小程序页面跳转的原理。<br>（现在深度，变成了 10 层，但是在 ios 10 的部分系统下，还是有 bug 的，还是要考虑页面深度这种场景的。）<br><a href="http://www.wxappclub.com/topic/596" target="_blank" rel="noopener">小程序路由</a></p><h2 id="微信小程序之上拉加载"><a href="#微信小程序之上拉加载" class="headerlink" title="微信小程序之上拉加载"></a>微信小程序之上拉加载</h2><p>我现在公司的项目做的是电商的小程序，下拉刷新，官网写的很明确不能与 scroll-view 同时使用。我是在脑子瓦特的情况下，onReachBottom 和 scroll-view 的 bindscrolltolower 都用了。经过我的实践，推荐大家用 onReachBottom。如果是一些 tab 里面也有下拉刷新，这个就很方便直接上代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">onReachBottom() &#123;</span><br><span class="line">        <span class="keyword">let</span> isPush = <span class="keyword">this</span>.data.index,</span><br><span class="line">            val = <span class="keyword">this</span>.data.inputVal;</span><br><span class="line">        <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">            isBtnShow: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (isPush ==<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> num = <span class="keyword">this</span>.data.limitIndex;</span><br><span class="line">            <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                limitIndex: num+<span class="number">1</span></span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="comment">//关于上拉加载的性能优化</span></span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                    <span class="comment">// 给后端传下拉刷新的次数+1</span></span><br><span class="line">                    <span class="keyword">const</span> data = &#123;</span><br><span class="line">                        limitIndex: <span class="keyword">this</span>.data.limitIndex</span><br><span class="line">                    &#125;;</span><br><span class="line">                    utils.sendRequest(api.AllGoodsUrl, data, <span class="keyword">this</span>.handleReachBottom.bind(<span class="keyword">this</span>));</span><br><span class="line">            &#125;,<span class="number">1500</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (val != <span class="string">''</span>) &#123;</span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">let</span> num = <span class="keyword">this</span>.data.limitIndex;</span><br><span class="line">                    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                        limitIndex: num+<span class="number">1</span></span><br><span class="line">                    &#125;)</span><br><span class="line">                    <span class="comment">// 给后端传下拉刷新的次数+1</span></span><br><span class="line">                    <span class="keyword">const</span> data = &#123;</span><br><span class="line">                        limitIndex: <span class="keyword">this</span>.data.limitIndex,</span><br><span class="line">                         data:&#123;</span><br><span class="line">                            name: <span class="keyword">this</span>.data.inputVal,</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;;</span><br><span class="line">                    utils.sendRequest(api.AllGoodsUrl, data, <span class="keyword">this</span>.handleLoadMore.bind(<span class="keyword">this</span>));</span><br><span class="line">            &#125;,<span class="number">1500</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">这段代码主要就是判断tab的状态来延时请求接口。实现效果如下图：</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029ed35b112?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029f2d7f4e8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>这就是我用上拉加载的实践，希望有大神能提出更好的建议。</p><h2 id="微信小程序之数据交互"><a href="#微信小程序之数据交互" class="headerlink" title="微信小程序之数据交互"></a>微信小程序之数据交互</h2><p>说到这里顺便把我的一些关于数据交互的一些经验分享一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sendRequest</span>(<span class="params">path, data, callback</span>) </span>&#123;</span><br><span class="line">  wx.request(&#123;</span><br><span class="line">    url: path,</span><br><span class="line">    data: data,</span><br><span class="line">    header: &#123;</span><br><span class="line">      <span class="string">"content-type"</span>: <span class="string">"application/json"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    method: <span class="string">"POST"</span>,</span><br><span class="line">    success: callback,</span><br><span class="line">    fail: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">把微信请求封装起来;</span><br><span class="line">还有项目里面要用到的接口如下;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">promiseRequest</span>(<span class="params">url, data = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: url,</span><br><span class="line">      data: data,</span><br><span class="line">      method: <span class="string">'POST'</span>,</span><br><span class="line">      header: &#123;</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      success:<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">            resolve(res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          reject(res.errMsg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      fail: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        reject(err)</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"failed"</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">新增  promise  请求方式</span><br><span class="line">        <span class="comment">//没有参数就传空</span></span><br><span class="line">  utils.promiseRequest(api.BannerUrl).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(res.data.error == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//dosomething。。。</span></span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">          utils.showModal(res.data.err_msg)</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029f634fd62?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa029fd54632f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a044519ed?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>希望有大神能帮忙一下小程序的组件化最佳实践~<br>(现在wepy和mpvue 都挺靠谱的 /捂脸)</p><h2 id="微信小程序之Android请求失败的坑"><a href="#微信小程序之Android请求失败的坑" class="headerlink" title="微信小程序之Android请求失败的坑"></a>微信小程序之Android请求失败的坑</h2><p>我当时遇到的情况是，在模拟器和IOS环境下请求数据都是没有任何问题的，在测试android环境时发现请求失败如下图<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a07a2247e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>这个错还让我跟运维的大哥撕了半天哈哈， 首先出现这个错，兄弟这个锅完完全全就能甩给运维的大哥，不留任何余地。 然后可以帮大哥提供一写资料，一步步排查，先查你项目绑定域名：<br>1、https证书问题 ：ssl证书配置需要使用pem,不使用crt, ，<br>2、服务器端的版本信息：TLS版本的问题，该问题在微信小程序官方文档中已经提及到，服务器TLS版本必须支持 1.2 （启用1.2，禁用1.1和1.0等低版本），<br>3、前两种方法是在查阅资料有人说是可解决的，但是对于我们公司最后在排查前两项之后，运维大哥用Nginx转发了之后，解决了安卓请求失败的问题。希望可以帮到大家吧~</p><h2 id="微信小程序之地址页面三级联动"><a href="#微信小程序之地址页面三级联动" class="headerlink" title="微信小程序之地址页面三级联动"></a>微信小程序之地址页面三级联动</h2><p>这个问题，现给大家贴一个地址，非常感谢大神的开源<br><a href="https://blog.csdn.net/sinat_17775997/article/details/54573560" target="_blank" rel="noopener">小程序路由</a><br>大家可以看到代码之后，先理清你要处理的后端数据和存地址的要求等等，我遇到的问题是<br>后端给我的数据里面有每一个地址对应的 ID，比如北京：2 北京：50 东城区：500<br>处理这个数据的时候，我根据原来大神的代码做了一些修改.<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a0f83cf57?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> val = e.detail.value,</span><br><span class="line">            t = <span class="keyword">this</span>.data.values,</span><br><span class="line">            cityData = <span class="keyword">this</span>.data.cityData,</span><br><span class="line">            index = <span class="keyword">this</span>.data.id,</span><br><span class="line">            list = <span class="keyword">this</span>.data.addrList;</span><br><span class="line">            list[index].area = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (val[<span class="number">0</span>] != t[<span class="number">0</span>]) &#123; <span class="comment">//当val是选择省份的时候</span></span><br><span class="line">                <span class="keyword">const</span> citys = [];</span><br><span class="line">                <span class="keyword">const</span> countys = [];</span><br><span class="line">                    cityData[val[<span class="number">0</span>]].child.map(<span class="function"><span class="params">item</span> =&gt;</span> citys.push(&#123;<span class="attr">name</span>:item.name,<span class="attr">id</span>:item.id&#125;));</span><br><span class="line">                    cityData[val[<span class="number">0</span>]].child[<span class="number">0</span>].child.map(<span class="function"><span class="params">item</span> =&gt;</span> countys.push(&#123;<span class="attr">name</span>:item.name,<span class="attr">id</span>:item.id&#125;));</span><br><span class="line">                    list[index].provinceName = <span class="keyword">this</span>.data.provinces[val[<span class="number">0</span>]].name;<span class="comment">//省份</span></span><br><span class="line">                    list[index].cityName = cityData[val[<span class="number">0</span>]].child[<span class="number">0</span>].name;<span class="comment">//城市</span></span><br><span class="line">                    list[index].districtName = cityData[val[<span class="number">0</span>]].child[<span class="number">0</span>].child[<span class="number">0</span>].name;<span class="comment">//地区</span></span><br><span class="line">                    list[index].province = <span class="keyword">this</span>.data.provinces[val[<span class="number">0</span>]].id;<span class="comment">//对应的传值ID</span></span><br><span class="line">                    list[index].city = cityData[val[<span class="number">0</span>]].child[<span class="number">0</span>].id;<span class="comment">//对应的传值ID</span></span><br><span class="line">                    list[index].district = cityData[val[<span class="number">0</span>]].child[<span class="number">0</span>].child[<span class="number">0</span>].id;<span class="comment">//对应的传值ID</span></span><br><span class="line">                <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                    citys: citys,</span><br><span class="line">                    countys: countys,</span><br><span class="line">                    values: val,</span><br><span class="line">                    value: [val[<span class="number">0</span>], <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">                    addrList: list</span><br><span class="line">                &#125;)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (val[<span class="number">1</span>] != t[<span class="number">1</span>]) &#123;<span class="comment">//当val是选择城市的时候</span></span><br><span class="line">                    <span class="keyword">const</span> countys = [];</span><br><span class="line">                    cityData[val[<span class="number">0</span>]].child[val[<span class="number">1</span>]].child.map(<span class="function"><span class="params">item</span> =&gt;</span> countys.push(&#123;<span class="attr">name</span>:item.name,<span class="attr">id</span>:item.id&#125;));</span><br><span class="line">                    list[index].cityName = <span class="keyword">this</span>.data.citys[val[<span class="number">1</span>]].name;<span class="comment">// 选择城市</span></span><br><span class="line">                    list[index].city = <span class="keyword">this</span>.data.citys[val[<span class="number">1</span>]].id;<span class="comment">//对应的传值ID</span></span><br><span class="line">                    list[index].districtName = cityData[val[<span class="number">0</span>]].child[val[<span class="number">1</span>]].child[<span class="number">0</span>].name;<span class="comment">//选择城市对应的地区</span></span><br><span class="line">                    list[index].district = cityData[val[<span class="number">0</span>]].child[val[<span class="number">1</span>]].child[<span class="number">0</span>].id;<span class="comment">//对应的传值ID</span></span><br><span class="line">                    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                        countys: countys,</span><br><span class="line">                        values: val,</span><br><span class="line">                        value: [val[<span class="number">0</span>], val[<span class="number">1</span>], <span class="number">0</span>],</span><br><span class="line">                        addrList: list</span><br><span class="line">                    &#125;)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (val[<span class="number">2</span>] != t[<span class="number">2</span>]) &#123;<span class="comment">//当val是选择地区的时候</span></span><br><span class="line">                    list[index].districtName = <span class="keyword">this</span>.data.countys[val[<span class="number">2</span>]].name;<span class="comment">//选择地区</span></span><br><span class="line">                    list[index].district = <span class="keyword">this</span>.data.countys[val[<span class="number">2</span>]].id;<span class="comment">//对应的传值ID</span></span><br><span class="line">                    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                        county: <span class="keyword">this</span>.data.countys[val[<span class="number">2</span>]].name,</span><br><span class="line">                        values: val,</span><br><span class="line">                        addrList: list</span><br><span class="line">                    &#125;)</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">                <span class="comment">// statements</span></span><br><span class="line">                <span class="built_in">console</span>.log(e);</span><br><span class="line">            &#125;</span><br><span class="line">list里面是有 收货人，电话，等等信息  但是我只操作改变数组里面地址改变的信息，</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a1a8db5ac?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>布局方面需要做一些修改的地方就是<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a1d718773?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a1de1d81b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>我贴了这么多图，是因为我真不会说了，调这个页面调了两天。只能提供个大概方向，还是得一步步处理数据，goodluck~</p><h2 id="微信小程序之-Android-环境下的横向滚动"><a href="#微信小程序之-Android-环境下的横向滚动" class="headerlink" title="微信小程序之 Android 环境下的横向滚动"></a>微信小程序之 Android 环境下的横向滚动</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;view <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab bg"</span>&gt;</span><br><span class="line">          &lt;scroll-view <span class="class"><span class="keyword">class</span></span>=<span class="string">""</span> scroll-x=<span class="string">"true"</span> style=<span class="string">"width: 100%;white-space: nowrap; display: flex;overflow-x: auto;"</span>&gt;</span><br><span class="line">              &lt;view style=<span class="string">"display: inline-block"</span> bindtap=<span class="string">"switchIndex"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"tab-list &#123;&#123;index === 1 ?'on':''&#125;&#125;"</span>&gt;首页&lt;<span class="regexp">/view&gt;</span></span><br><span class="line"><span class="regexp">              &lt;view wx:for="&#123;&#123;tab&#125;&#125;" wx:key="index" data-id="&#123;&#123;item.id&#125;&#125;" data-index="&#123;&#123;index&#125;&#125;"</span></span><br><span class="line"><span class="regexp">                 style="display: inline-block" bindtap="switchTab" class="tab-list &#123;&#123;tabIndex === index?'on':''&#125;&#125;"&gt;</span></span><br><span class="line"><span class="regexp">                  &#123;&#123;item.nav_name&#125;&#125;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>view&gt;</span><br><span class="line">          &lt;<span class="regexp">/scroll-view&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>view&gt;</span><br><span class="line">代码一贴其实当测试小哥告诉你安卓tab不能滑的时候，你只需要加一个overflow-x: auto;哈哈哈</span><br></pre></td></tr></table></figure><h2 id="微信小程序之-Ios-环境下-mp4-播放问题"><a href="#微信小程序之-Ios-环境下-mp4-播放问题" class="headerlink" title="微信小程序之 Ios 环境下 mp4 播放问题"></a>微信小程序之 Ios 环境下 mp4 播放问题</h2><p>当你遇到你的 mp4 格式有的能播放，有的不能播放的话，你只需要看一下你的 mp4 编码格式，必须是 h264 格式才行。</p><h2 id="微信小程序之微信支付的坑"><a href="#微信小程序之微信支付的坑" class="headerlink" title="微信小程序之微信支付的坑"></a>微信小程序之微信支付的坑</h2><p>这个因为我也是第一次写小程序嘛，后端的大哥，在 H5 的商城里什么都实现了一次了，非说各种没问题，只贴两个图就明白了第一个<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a213acdf2?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>这个 api 里面的所有数据都是后端返给你的，不要接受他的甩锅哈哈。<br>还有就是一定要让后端好好看微信支付的文档，一般公司开发商城都是服务商版的支付服务，这里就是我和后端大哥的甩锅之路，他没有绑定我得小程序 appid，然后各种说调不通。。。<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a345baf55?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>去这里配置好，前端只需要调 API 传值就好</p><h2 id="微信小程序之图片上传"><a href="#微信小程序之图片上传" class="headerlink" title="微信小程序之图片上传"></a>微信小程序之图片上传</h2><p>老规矩，直接上代码了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">handleCancelPic() &#123;</span><br><span class="line">        <span class="keyword">let</span> id = <span class="keyword">this</span>.data.dbId;</span><br><span class="line">        wx.chooseImage(&#123;</span><br><span class="line">          count: <span class="number">3</span>, <span class="comment">// 默认9</span></span><br><span class="line">          sizeType: [<span class="string">'compressed'</span>], <span class="comment">// 可以指定是原图还是压缩图，默认二者都有</span></span><br><span class="line">          sourceType: [<span class="string">'album'</span>, <span class="string">'camera'</span>], <span class="comment">// 可以指定来源是相册还是相机，默认二者都有</span></span><br><span class="line">          success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片</span></span><br><span class="line">            <span class="keyword">var</span> tempFilePaths = res.tempFilePaths;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                src: tempFilePaths</span><br><span class="line">            &#125;)</span><br><span class="line">            upload(<span class="keyword">this</span>,tempFilePaths,<span class="string">''</span>,<span class="string">''</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">然后一个封装好的方法</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params">page, path,way,id</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(path)</span><br><span class="line">  wx.showToast(&#123;</span><br><span class="line">    icon: <span class="string">"loading"</span>,</span><br><span class="line">    title: <span class="string">"正在上传"</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> test = [],</span><br><span class="line">    that = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;path.length; i++) &#123;</span><br><span class="line">        wx.uploadFile(&#123;</span><br><span class="line">          url: api.CancelImg,</span><br><span class="line">          filePath: path[i],</span><br><span class="line">          name: <span class="string">'file'</span>,</span><br><span class="line">          header: &#123; <span class="string">"Content-Type"</span>: <span class="string">"multipart/form-data"</span> &#125;,</span><br><span class="line">          success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            test.push(res);</span><br><span class="line">            wx.setStorageSync(<span class="string">'cancelImg'</span>,test)</span><br><span class="line">            <span class="built_in">console</span>.log(test)</span><br><span class="line">            <span class="keyword">if</span> (res.statusCode != <span class="number">200</span>) &#123;</span><br><span class="line">              wx.showModal(&#123;</span><br><span class="line">                title: <span class="string">'提示'</span>,</span><br><span class="line">                content: <span class="string">'上传失败'</span>,</span><br><span class="line">                showCancel: <span class="literal">false</span></span><br><span class="line">              &#125;)</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                wx.showModal(&#123;</span><br><span class="line">                    title: <span class="string">'提示'</span>,</span><br><span class="line">                    content: <span class="string">'上传成功'</span>,</span><br><span class="line">                    showCancel: <span class="literal">false</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          fail: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(e);</span><br><span class="line">            wx.showModal(&#123;</span><br><span class="line">              title: <span class="string">'提示'</span>,</span><br><span class="line">              content: <span class="string">'上传失败'</span>,</span><br><span class="line">              showCancel: <span class="literal">false</span></span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;,</span><br><span class="line">          complete: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            wx.hideToast();  <span class="comment">//隐藏Toast</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">这个是多个图片上传的方法，单个图片上传的话，把循环去掉就好。主要是因为微信官方默认的就是一次上传一张图片这个很蛋疼。只能这么搞了。。。</span><br></pre></td></tr></table></figure><h2 id="微信小程序之电商购物车逻辑"><a href="#微信小程序之电商购物车逻辑" class="headerlink" title="微信小程序之电商购物车逻辑"></a>微信小程序之电商购物车逻辑</h2><p>接着再给大家分享一个关于小程序购物车全选的逻辑处理，这个还是要感谢我的老妹教导我，一个开发人员做东西一定要严谨，不管 UI 设计的有多丑，该有的逻辑你一定要做到。<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a3b1fbc66?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>首先我们要做到的就是，当用户点击第三个商品时 全选按钮自动选中，或者全选之后，只要有一个商品不选中，全选按钮也得变动。先给大家看一下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">你要在页面onload时候定义一些你需要每次渲染的数据</span><br><span class="line">data: &#123;</span><br><span class="line">likeList: [],</span><br><span class="line">carts:[], <span class="comment">// 购物车列表</span></span><br><span class="line">hasList:<span class="literal">false</span>, <span class="comment">// 列表是否有数据</span></span><br><span class="line"><span class="comment">//totalPrice:0, // 总价，初始为0</span></span><br><span class="line">selectAllStatus:<span class="literal">false</span>, <span class="comment">// 全选状态，默认全选,</span></span><br><span class="line">goodsNums:<span class="number">0</span>,</span><br><span class="line">allclick:[]</span><br><span class="line">&#125;</span><br><span class="line">每件商品单个选中的的逻辑处理</span><br><span class="line">selectList(e) &#123;</span><br><span class="line">  <span class="keyword">const</span> index = e.currentTarget.dataset.index;<span class="comment">// 获取每一个点击的购物车ID</span></span><br><span class="line">  <span class="keyword">let</span> carts = <span class="keyword">this</span>.data.carts,</span><br><span class="line">  selected = carts[index].select,</span><br><span class="line">  all = <span class="keyword">this</span>.data.allclick;</span><br><span class="line">  carts[index].select = !selected;</span><br><span class="line">carts[index].select == <span class="literal">true</span> ? all.push(index):all.splice(index,<span class="number">1</span>);</span><br><span class="line">all.length == carts.length ?</span><br><span class="line"><span class="keyword">this</span>.setData(&#123;</span><br><span class="line">  selectAllStatus: <span class="literal">true</span></span><br><span class="line">&#125;):<span class="keyword">this</span>.setData(&#123;</span><br><span class="line">  selectAllStatus: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br><span class="line">  <span class="keyword">this</span>.getTotalPrice();</span><br><span class="line">&#125;,</span><br><span class="line">上面的代码，先做的就是单选的页面渲染效果。判断部分的代码就是最主要的处理全选逻辑的一步。相信你看到这里也注意到我在data里定义了一个allclick的空数组，然后就是接下来的逻辑：</span><br></pre></td></tr></table></figure><p>按钮选中时取出对应 item 的角标放到新的 arr 里，这里因为我之前结算的逻辑已经搞好了，我就随便往数组里 push 数据，但其实可以作为对应商品的更重要的一些数据处理。按钮不选中是从新的 arr 里找到这个 item 对应下标的数据移除完成上面两步处理之后，每次按钮状态发生变化的时候判断 arr 的长度和 cart 的长度。<br>这就是我的处理，也可循环，实现的方式有很多，只是拿出来让没有接触过的小伙伴做个参考～</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">likeList: [],</span><br><span class="line">carts:[], <span class="comment">// 购物车列表</span></span><br><span class="line">hasList:<span class="literal">false</span>, <span class="comment">// 列表是否有数据</span></span><br><span class="line"><span class="comment">//totalPrice:0, // 总价，初始为0</span></span><br><span class="line">selectAllStatus:<span class="literal">false</span>, <span class="comment">// 全选状态，默认全选,</span></span><br><span class="line">goodsNums:<span class="number">0</span>,</span><br><span class="line">allclick:[]</span><br><span class="line">&#125;</span><br><span class="line">每件商品单个选中的的逻辑处理</span><br><span class="line">selectList(e) &#123;</span><br><span class="line">  <span class="keyword">const</span> index = e.currentTarget.dataset.index;<span class="comment">// 获取每一个点击的购物车ID</span></span><br><span class="line">  <span class="keyword">let</span> carts = <span class="keyword">this</span>.data.carts,</span><br><span class="line">  selected = carts[index].select,</span><br><span class="line">  all = <span class="keyword">this</span>.data.allclick;</span><br><span class="line">  carts[index].select = !selected;</span><br><span class="line">carts[index].select == <span class="literal">true</span> ? all.push(index):all.splice(index,<span class="number">1</span>);</span><br><span class="line">all.length == carts.length ?</span><br><span class="line"><span class="keyword">this</span>.setData(&#123;</span><br><span class="line">  selectAllStatus: <span class="literal">true</span></span><br><span class="line">&#125;):<span class="keyword">this</span>.setData(&#123;</span><br><span class="line">  selectAllStatus: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br><span class="line">  <span class="keyword">this</span>.getTotalPrice();</span><br><span class="line">&#125;,</span><br><span class="line">这段代码也还是先处理全选的状态，然后就是关联状态的处理，</span><br></pre></td></tr></table></figure><p>当全选没有勾选的时候全部改变商品信息里的按钮为 false，直接清空 allclick 数组。<br>当全选勾选的时候全部改变商品信息里的按钮为 true，先清空，接着重新 push，再赋值。<br>经过这几步操作之后就解决了全选这方面的所有逻辑，</p><h2 id="微信小程序之使用-Map-对象"><a href="#微信小程序之使用-Map-对象" class="headerlink" title="微信小程序之使用 Map 对象"></a>微信小程序之使用 Map 对象</h2><p>这是我的梁 master 跟我提的这件事，我是小程序，她是 Android，项目一样。我俩关系好，然后她教我的用的这个 Map 对象，其实这个是 java 的 map 对象。用起来真的很爽，不废话了直接上代码。<br>这个在 es6 的标准里面也推出了 Map 对象。借用阮大神书里面的一段话：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">JavaScript 的对象（<span class="built_in">Object</span>），本质上是键值对的集合（Hash 结构），但是传统上只能用字符串当作键。这给它的使用带来了很大的限制。</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> data = &#123;&#125;;</span><br><span class="line"><span class="keyword">const</span> element = <span class="built_in">document</span>.getElementById(<span class="string">'myDiv'</span>);</span><br><span class="line">data[element] = <span class="string">'metadata'</span>;</span><br><span class="line">data[<span class="string">'[object HTMLDivElement]'</span>] <span class="comment">// "metadata"</span></span><br><span class="line"></span><br><span class="line">上面代码原意是将一个 DOM 节点作为对象data的键，但是由于对象只接受字符串作为键名，所以element被自动转为字符串[object HTMLDivElement]。</span><br><span class="line">为了解决这个问题，ES6 提供了 <span class="built_in">Map</span> 数据结构。它类似于对象，也是键值对的集合，但是“键”的范围不限于字符串，各种类型的值（包括对象）都可以当作键。也就是说，<span class="built_in">Object</span> 结构提供了“字符串—值”的对应，<span class="built_in">Map</span> 结构提供了“值—值”的对应，是一种更完善的 Hash 结构实现。如果你需要“键值对”的数据结构，<span class="built_in">Map</span> 比 <span class="built_in">Object</span> 更合适。</span><br></pre></td></tr></table></figure><p>感兴趣的小伙伴可以移步<a href="http://es6.ruanyifeng.com/#docs/set-map" target="_blank" rel="noopener">es6 入门 map set</a></p><p>最佳实践，需求是点击每一个分类，在点击过后如果数据返回没有变化，就不请求接口。 来实现一些优化。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> localMap = <span class="keyword">new</span> <span class="built_in">Map</span>(),<span class="comment">// 定义一个全局的MAP对象</span></span><br><span class="line">typeCode = <span class="string">''</span>; <span class="comment">// 点击分类里面的细分选项卡</span></span><br><span class="line">handleClickTabs(e) &#123;</span><br><span class="line"> <span class="keyword">let</span> id = e.target.dataset.index,</span><br><span class="line"> code = e.target.dataset.id;</span><br><span class="line">typeCode = code;<span class="comment">// 这里定义code，在请求回调里面使用</span></span><br><span class="line"><span class="keyword">this</span>.setData(&#123; <span class="attr">leftTab</span> : id &#125;);</span><br><span class="line"><span class="keyword">if</span> (localMap!=<span class="literal">null</span>) &#123;<span class="comment">// map对象</span></span><br><span class="line"><span class="keyword">let</span> list = localMap.get(typeCode);<span class="comment">//获取对应分类的type的code</span></span><br><span class="line"><span class="keyword">if</span> (list!=<span class="literal">null</span>) &#123;<span class="comment">//map里面有值，渲染页面</span></span><br><span class="line"><span class="keyword">this</span>.setData(&#123; <span class="attr">tabSonList</span>:list &#125;) &#125;<span class="keyword">else</span> &#123;<span class="comment">//map里面没有值，去请求接口 const data = &#123; goodsTypeCode: code &#125;;</span></span><br><span class="line">utils.sendRequest(api.ClassifySon, data, <span class="keyword">this</span>.handleGoodsSon.bind(<span class="keyword">this</span>)); &#125;</span><br><span class="line"> &#125;<span class="keyword">else</span> &#123; <span class="keyword">const</span> data = &#123; <span class="attr">goodsTypeCode</span>: code &#125;;</span><br><span class="line">utils.sendRequest(api.ClassifySon, data, <span class="keyword">this</span>.handleGoodsSon.bind(<span class="keyword">this</span>)); &#125; &#125;, <span class="comment">//分类里面的内容 handleGoodsSon(res) &#123;</span></span><br><span class="line"> <span class="keyword">let</span> list = res.data; localMap.set(typeCode,list)<span class="comment">//存对应typeCode的list</span></span><br><span class="line"><span class="keyword">this</span>.setData(&#123; <span class="attr">tabSonList</span>:list &#125;) &#125;,</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a3f1b5a82?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"><br>这样就实现了，对选项卡的优化，如果接口数据变多了的话，会重新赋值。 虽然是自己给自己加戏，但这是也是我的一种工作态度，学习了新东西，还让优化了项目。</p><h2 id="微信小程序之全局变量缓存的问题"><a href="#微信小程序之全局变量缓存的问题" class="headerlink" title="微信小程序之全局变量缓存的问题"></a>微信小程序之全局变量缓存的问题</h2><p>这个问题的出现是因为，在 input 的事件，我没有找到更好的能监听键盘收回的方法，也是为了更好的用户体验吧，所以随之而来的问题就是全局变量，在赋值之后用户退出这个页面，全局变量被微信缓存了，然后造成，用户输入过一次之后，修改手机号失败的 bug。<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a4129c561?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> Btel = <span class="string">''</span>,<span class="comment">//防止用户恶意修改手机号</span></span><br><span class="line">    Byzm = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">handleTel(e) &#123;<span class="comment">// 这里修改用户输入的手机号</span></span><br><span class="line">        <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">            tel:e.detail.value</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    handleYzm(e) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">            Yzm:e.detail.value</span><br><span class="line">        &#125;)</span><br><span class="line">        Byzm = e.detail.value;</span><br><span class="line">        <span class="keyword">let</span> psd = <span class="keyword">this</span>.data.psd,</span><br><span class="line">            yzm = <span class="keyword">this</span>.data.Yzm;</span><br><span class="line">        yzm == psd ? <span class="keyword">this</span>.setData(&#123;<span class="attr">isYzm</span>:<span class="number">0</span>&#125;):<span class="string">''</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleGetYzm() &#123;</span><br><span class="line">        <span class="keyword">let</span> reg = common.telReg,</span><br><span class="line">            val = <span class="keyword">this</span>.data.tel;</span><br><span class="line">        <span class="keyword">if</span> (!reg.test(val)) &#123;</span><br><span class="line">               wx.showModal(&#123;</span><br><span class="line">                content:<span class="string">'请输入正确的手机号'</span>,</span><br><span class="line">                showCancel:<span class="literal">false</span>,</span><br><span class="line">                confirmColor:<span class="string">'#3cc51f'</span>,<span class="comment">//默认值为#3cc51f</span></span><br><span class="line">                success:<span class="function"><span class="params">res</span> =&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(res.confirm)&#123;</span><br><span class="line">                        <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                            tel:<span class="string">''</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;<span class="comment">//发送验证码的时候用全局变量的手机号</span></span><br><span class="line">            Btel = val;<span class="comment">// 这里是全局的手机号</span></span><br><span class="line">            <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                isReset : <span class="literal">true</span>,</span><br><span class="line">                isNoClick: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">const</span> data =&#123;</span><br><span class="line">                tel:val<span class="comment">//传的是全局变量</span></span><br><span class="line">            &#125;;</span><br><span class="line">            utils.sendRequest(api.YanZhengMa, data, <span class="keyword">this</span>.handleGetYzmSucc.bind(<span class="keyword">this</span>));</span><br><span class="line">            <span class="comment">//button 定时器</span></span><br><span class="line">            <span class="keyword">let</span> time = setInterval(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> phoneCode = <span class="keyword">this</span>.data.time;</span><br><span class="line">                phoneCode --</span><br><span class="line">                <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                    time : phoneCode</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">if</span>(phoneCode == <span class="number">0</span>)&#123;</span><br><span class="line">                     clearInterval(time)</span><br><span class="line">                     <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                        isReset : <span class="literal">false</span>,</span><br><span class="line">                        isNoClick: <span class="literal">false</span>,</span><br><span class="line">                        time:<span class="number">60</span></span><br><span class="line">                     &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后这一步是校验了用户在请求完验证码接口后 有没有修改手机好 然后保存</span></span><br><span class="line">handleSave() &#123;</span><br><span class="line">        <span class="keyword">let</span> name = <span class="keyword">this</span>.data.name,</span><br><span class="line">            telNum = <span class="keyword">this</span>.data.tel,</span><br><span class="line">            yzm = Byzm,</span><br><span class="line">            status = <span class="keyword">this</span>.data.isYzm,</span><br><span class="line">            card = wx.getStorageSync(<span class="string">'UserCard'</span>);</span><br><span class="line">        <span class="keyword">let</span> timestamp= <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">        <span class="keyword">if</span> (yzm == <span class="string">''</span>) &#123;</span><br><span class="line">            wx.showModal(&#123;</span><br><span class="line">                content:<span class="string">'请输入验证码.'</span>,</span><br><span class="line">                showCancel:<span class="literal">false</span>,</span><br><span class="line">                confirmColor:<span class="string">'#3cc51f'</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (name!=<span class="string">''</span>&amp;&amp;telNum!=<span class="string">''</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(Btel != telNum) &#123;</span><br><span class="line">                utils.showModal(<span class="string">'手机号发生变化，请重新获取验证码。'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> data =&#123;</span><br><span class="line">                distribution_id:card.distribution_id,</span><br><span class="line">                post:&#123;</span><br><span class="line">                    user_name:name,</span><br><span class="line">                    user_tel:Btel,</span><br><span class="line">                    user_code:yzm</span><br><span class="line">                &#125;,</span><br><span class="line">                user_id:card.user_id,</span><br><span class="line">                password:yzm+timestamp</span><br><span class="line">                &#125;;</span><br><span class="line">                utils.sendRequest(api.BindTel, data, <span class="keyword">this</span>.handleSaveTel.bind(<span class="keyword">this</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            utils.showModal(<span class="string">'请填写完整信息哟'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 然后在 保存成功之后 用户点击确定  清空 全局变量  也可以在隐藏和卸载的生命周期里面清空全局变量。</span></span><br><span class="line">handleSaveTel(res) &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.data.error == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> go = <span class="keyword">this</span>.data.go,</span><br><span class="line">                id = res.data.data.id,</span><br><span class="line">                lv = res.data.data.level;</span><br><span class="line">            wx.showModal(&#123;</span><br><span class="line">                content:<span class="string">'绑定成功~'</span>,</span><br><span class="line">                showCancel:<span class="literal">false</span>,</span><br><span class="line">                confirmColor:<span class="string">'#3cc51f'</span>,<span class="comment">//默认值为#3cc51f</span></span><br><span class="line">                success:<span class="function"><span class="params">res</span> =&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(res.confirm)&#123;</span><br><span class="line">                        Byzm = <span class="string">''</span>;<span class="comment">//对小程序全局变量缓存进行清除</span></span><br><span class="line">                        <span class="keyword">if</span> (go) &#123;</span><br><span class="line">                            wx.redirectTo(&#123;</span><br><span class="line">                              url: <span class="string">'/pages/user/cash/cash'</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (id != <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">let</span> card = wx.getStorageSync(<span class="string">'UserCard'</span>);</span><br><span class="line">                                card.distribution_id = id;</span><br><span class="line">                                card.distribution_level = lv;</span><br><span class="line">                                wx.setStorageSync(<span class="string">'UserCard'</span>,card);</span><br><span class="line">                                wx.setStorageSync(<span class="string">'seller'</span>, <span class="literal">true</span>)</span><br><span class="line">                            &#125;</span><br><span class="line">                            wx.switchTab(&#123;</span><br><span class="line">                              url: <span class="string">'/pages/user/index'</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            utils.showModal(res.data.err_msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="微信小程序之全局变量缓存的问题-1"><a href="#微信小程序之全局变量缓存的问题-1" class="headerlink" title="微信小程序之全局变量缓存的问题"></a>微信小程序之全局变量缓存的问题</h2><p>这个问题的出现是因为，在 input 的事件，我没有找到更好的能监听键盘收回的方法，也是为了更好的用户体验吧，所以随之而来的问题就是全局变量，在赋值之后用户退出这个页面，全局变量被微信缓存了，然后造成，用户输入过一次之后，修改手机号失败的 bug。<br><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a4129c561?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> Btel = <span class="string">''</span>,<span class="comment">//防止用户恶意修改手机号</span></span><br><span class="line">    Byzm = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">handleTel(e) &#123;<span class="comment">// 这里修改用户输入的手机号</span></span><br><span class="line">        <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">            tel:e.detail.value</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    handleYzm(e) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">            Yzm:e.detail.value</span><br><span class="line">        &#125;)</span><br><span class="line">        Byzm = e.detail.value;</span><br><span class="line">        <span class="keyword">let</span> psd = <span class="keyword">this</span>.data.psd,</span><br><span class="line">            yzm = <span class="keyword">this</span>.data.Yzm;</span><br><span class="line">        yzm == psd ? <span class="keyword">this</span>.setData(&#123;<span class="attr">isYzm</span>:<span class="number">0</span>&#125;):<span class="string">''</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleGetYzm() &#123;</span><br><span class="line">        <span class="keyword">let</span> reg = common.telReg,</span><br><span class="line">            val = <span class="keyword">this</span>.data.tel;</span><br><span class="line">        <span class="keyword">if</span> (!reg.test(val)) &#123;</span><br><span class="line">               wx.showModal(&#123;</span><br><span class="line">                content:<span class="string">'请输入正确的手机号'</span>,</span><br><span class="line">                showCancel:<span class="literal">false</span>,</span><br><span class="line">                confirmColor:<span class="string">'#3cc51f'</span>,<span class="comment">//默认值为#3cc51f</span></span><br><span class="line">                success:<span class="function"><span class="params">res</span> =&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(res.confirm)&#123;</span><br><span class="line">                        <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                            tel:<span class="string">''</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;<span class="comment">//发送验证码的时候用全局变量的手机号</span></span><br><span class="line">            Btel = val;<span class="comment">// 这里是全局的手机号</span></span><br><span class="line">            <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                isReset : <span class="literal">true</span>,</span><br><span class="line">                isNoClick: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">const</span> data =&#123;</span><br><span class="line">                tel:val<span class="comment">//传的是全局变量</span></span><br><span class="line">            &#125;;</span><br><span class="line">            utils.sendRequest(api.YanZhengMa, data, <span class="keyword">this</span>.handleGetYzmSucc.bind(<span class="keyword">this</span>));</span><br><span class="line">            <span class="comment">//button 定时器</span></span><br><span class="line">            <span class="keyword">let</span> time = setInterval(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> phoneCode = <span class="keyword">this</span>.data.time;</span><br><span class="line">                phoneCode --</span><br><span class="line">                <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                    time : phoneCode</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="keyword">if</span>(phoneCode == <span class="number">0</span>)&#123;</span><br><span class="line">                     clearInterval(time)</span><br><span class="line">                     <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                        isReset : <span class="literal">false</span>,</span><br><span class="line">                        isNoClick: <span class="literal">false</span>,</span><br><span class="line">                        time:<span class="number">60</span></span><br><span class="line">                     &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,<span class="number">1000</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后这一步是校验了用户在请求完验证码接口后 有没有修改手机好 然后保存</span></span><br><span class="line">handleSave() &#123;</span><br><span class="line">        <span class="keyword">let</span> name = <span class="keyword">this</span>.data.name,</span><br><span class="line">            telNum = <span class="keyword">this</span>.data.tel,</span><br><span class="line">            yzm = Byzm,</span><br><span class="line">            status = <span class="keyword">this</span>.data.isYzm,</span><br><span class="line">            card = wx.getStorageSync(<span class="string">'UserCard'</span>);</span><br><span class="line">        <span class="keyword">let</span> timestamp= <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">        <span class="keyword">if</span> (yzm == <span class="string">''</span>) &#123;</span><br><span class="line">            wx.showModal(&#123;</span><br><span class="line">                content:<span class="string">'请输入验证码.'</span>,</span><br><span class="line">                showCancel:<span class="literal">false</span>,</span><br><span class="line">                confirmColor:<span class="string">'#3cc51f'</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (name!=<span class="string">''</span>&amp;&amp;telNum!=<span class="string">''</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(Btel != telNum) &#123;</span><br><span class="line">                utils.showModal(<span class="string">'手机号发生变化，请重新获取验证码。'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> data =&#123;</span><br><span class="line">                distribution_id:card.distribution_id,</span><br><span class="line">                post:&#123;</span><br><span class="line">                    user_name:name,</span><br><span class="line">                    user_tel:Btel,</span><br><span class="line">                    user_code:yzm</span><br><span class="line">                &#125;,</span><br><span class="line">                user_id:card.user_id,</span><br><span class="line">                password:yzm+timestamp</span><br><span class="line">                &#125;;</span><br><span class="line">                utils.sendRequest(api.BindTel, data, <span class="keyword">this</span>.handleSaveTel.bind(<span class="keyword">this</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            utils.showModal(<span class="string">'请填写完整信息哟'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">// 然后在 保存成功之后 用户点击确定  清空 全局变量  也可以在隐藏和卸载的生命周期里面清空全局变量。</span></span><br><span class="line">handleSaveTel(res) &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.data.error == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> go = <span class="keyword">this</span>.data.go,</span><br><span class="line">                id = res.data.data.id,</span><br><span class="line">                lv = res.data.data.level;</span><br><span class="line">            wx.showModal(&#123;</span><br><span class="line">                content:<span class="string">'绑定成功~'</span>,</span><br><span class="line">                showCancel:<span class="literal">false</span>,</span><br><span class="line">                confirmColor:<span class="string">'#3cc51f'</span>,<span class="comment">//默认值为#3cc51f</span></span><br><span class="line">                success:<span class="function"><span class="params">res</span> =&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(res.confirm)&#123;</span><br><span class="line">                        Byzm = <span class="string">''</span>;<span class="comment">//对小程序全局变量缓存进行清除</span></span><br><span class="line">                        <span class="keyword">if</span> (go) &#123;</span><br><span class="line">                            wx.redirectTo(&#123;</span><br><span class="line">                              url: <span class="string">'/pages/user/cash/cash'</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (id != <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="keyword">let</span> card = wx.getStorageSync(<span class="string">'UserCard'</span>);</span><br><span class="line">                                card.distribution_id = id;</span><br><span class="line">                                card.distribution_level = lv;</span><br><span class="line">                                wx.setStorageSync(<span class="string">'UserCard'</span>,card);</span><br><span class="line">                                wx.setStorageSync(<span class="string">'seller'</span>, <span class="literal">true</span>)</span><br><span class="line">                            &#125;</span><br><span class="line">                            wx.switchTab(&#123;</span><br><span class="line">                              url: <span class="string">'/pages/user/index'</span></span><br><span class="line">                            &#125;)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            utils.showModal(res.data.err_msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="小程序之微信支付的深坑"><a href="#小程序之微信支付的深坑" class="headerlink" title="小程序之微信支付的深坑"></a>小程序之微信支付的深坑</h2><p>事情是这样的，因为公司主体变更，避税之类的事。我们公司的小程序，需要重新换绑微信支付，在财务给我们申请号商户号之后，我们排期半夜来切环境。 我记得是一个周四的晚上，十二点开始切环境，然后 大概后端代码数据库都准备好之后，我们重新绑定微信支付，以为大功告成。周五还能弹性一上午美滋滋～  没想到 刚交个测试，说微信支付不能用，提示我们没有授权。wtf，刚绑定好的你这样提示，不合适吧。按照报错一查，我去小程序 社区里一看。你敢信，微信开放平台的商户号和公众号商户号，是两回事。 小程序之支持公众号的商户号，但是你在开放平台绑定小程序微信支付的时候，官方给你的提示是 绑定成功～。然后 就变成了 早上七点下班。。。   血的教训呀！！！</p><p>一步步记录自己的踩坑历程~我要做到我技术不是最好的，但我给你总结的小程序的东西是最简单粗暴的哈哈哈</p><p><img src="https://user-gold-cdn.xitu.io/2018/5/29/163aa02a511249dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/7/24/164cc72d15bfcd7d?imageView2/1/w/1080/h/320/q/85/format/webp/interlace/1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;声明：本人也是菜鸟一只，写的不好的地方，大佬们指点指点。&quot;&gt;&lt;a href=&quot;#声明：本人也是菜鸟一只，写的不好的地方，大佬们指点指点。&quot; class=&quot;headerlink&quot; title=&quot;声明：本人也是菜鸟一只，写的不好的地方，大佬们指点指点。&quot;&gt;&lt;/a&gt;声明：本人也是菜鸟一只，写的不好的地方，大佬们指点指点。&lt;/h2&gt;&lt;p&gt;微信小程序商城，持续更新。先说说写小程序的渊源吧，我之前认识的大佬写了一个比较简单的小程序，我改了改样式于是成功的有了我的第一个小程序。&lt;br&gt;然后我在找工作的时候，简历上写了这么一回事，结果进来之后，leader 语重心长的对我说，公司的小程序商城就教给你了，重点是公司没有一个人会微信小程序。WTF，不是招我进来写 VUE 的吗? 于是就开始了我从零开始写微信小程序商城之路。&lt;br&gt;微信小程序的官方文档什么的我就不说了，那是肯定要看的。说说我这几天开始写我遇到的问题。希望对将要写小程序的你能有一丝丝帮助，因为本人也很菜。&lt;/p&gt;
    
    </summary>
    
      <category term="笔记" scheme="https://www.jonathon.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="微信小程序" scheme="https://www.jonathon.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
</feed>
